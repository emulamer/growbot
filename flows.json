[{"id":"38def9ff.21aea6","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"638a1ba8.eab274","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"68dd499a.a366c8","type":"tab","label":"Flow 3","disabled":false,"info":""},{"id":"5959bea1.7796f","type":"tab","label":"Flow 4","disabled":false,"info":""},{"id":"2b4fc933.a97346","type":"subflow","name":"HistChartCfg","info":"","category":"","in":[{"x":40,"y":60,"wires":[{"id":"fc14c775.f1c158"}]}],"out":[{"x":460,"y":80,"wires":[{"id":"fc14c775.f1c158","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"5189c7b3.782c68","type":"subflow","name":"DashChtCfg","info":"","category":"","in":[{"x":50,"y":30,"wires":[{"id":"c199c539.1f1bd8"}]}],"out":[{"x":380,"y":60,"wires":[{"id":"c199c539.1f1bd8","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"9243fa99.15cf28","type":"mqtt-broker","name":"mosquitto","broker":"localhost","port":"1883","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"30dfc866.064c48","type":"sqlitedb","db":"/home/pi/nodered-sqlite","mode":"RW"},{"id":"7f61f4d.e984e0c","type":"ui_tab","name":"Home","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"46917510.f81e1c","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"MM/DD/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"60058375.2cde8c","type":"ui_group","name":"","tab":"7f61f4d.e984e0c","order":1,"disp":true,"width":14,"collapse":false},{"id":"de56d4f6.628058","type":"ui_tab","name":"Historical","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"ab3ec0cf.5f1fc","type":"ui_group","name":"History","tab":"de56d4f6.628058","order":1,"disp":true,"width":14,"collapse":false},{"id":"8350c218.c1ab3","type":"ui_tab","name":"Configuration","icon":"dashboard","order":3,"disabled":false,"hidden":false},{"id":"a2345340.dcf1","type":"ui_group","name":"Power","tab":"8350c218.c1ab3","order":1,"disp":true,"width":"12","collapse":false},{"id":"96d9d6c0.428e28","type":"ui_group","name":"System","tab":"8350c218.c1ab3","order":3,"disp":true,"width":"6","collapse":false},{"id":"4975dc2d.9c4134","type":"ui_group","name":"Power Control","tab":"7f61f4d.e984e0c","order":2,"disp":true,"width":"6","collapse":true},{"id":"63d090d9.23eae","type":"ui_group","name":"pH Calibration","tab":"8350c218.c1ab3","order":4,"disp":true,"width":"6","collapse":false},{"id":"8822534f.5b11a","type":"ui_group","name":"TDS Calibration","tab":"8350c218.c1ab3","order":5,"disp":true,"width":"6","collapse":false},{"id":"f31f9e53.8a7f","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":1,"width":7,"height":1},{"id":"d5377a49.f6daf8","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":2,"width":7,"height":1},{"id":"591950ff.0a363","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":3,"width":7,"height":1},{"id":"7f70c5e7.3de1dc","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":4,"width":7,"height":1},{"id":"53071ceb.8a2e94","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":14,"width":5,"height":1},{"id":"df0017e7.10b168","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":15,"width":5,"height":1},{"id":"6a9ac3cd.d0831c","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":17,"width":5,"height":1},{"id":"699cbfb8.a2c5c","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":18,"width":5,"height":1},{"id":"5bce2eb2.34d88","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":20,"width":5,"height":1},{"id":"bd72273.ff7d5d8","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":21,"width":5,"height":1},{"id":"2b30aa6.51a9c56","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":23,"width":5,"height":1},{"id":"1bb89026.9dbff","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":24,"width":5,"height":1},{"id":"77ce56de.13b358","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":26,"width":5,"height":1},{"id":"f65d3134.6126a","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":27,"width":5,"height":1},{"id":"3d74877a.91cc38","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":29,"width":5,"height":1},{"id":"ae86e4a.2032b18","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":30,"width":5,"height":1},{"id":"4a8b378b.9fa778","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":32,"width":5,"height":1},{"id":"b771f3ee.6da22","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":33,"width":5,"height":1},{"id":"bb7e7a8d.4e01f8","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":35,"width":5,"height":1},{"id":"5c8e58a1.a72178","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":36,"width":5,"height":1},{"id":"573bdc6.0264424","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":38,"width":5,"height":1},{"id":"c961e321.6ef39","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":39,"width":5,"height":1},{"id":"208e75da.180b8a","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":41,"width":5,"height":1},{"id":"93bccaf5.129518","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":42,"width":5,"height":1},{"id":"aeb47e3b.5e7cd","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":43,"width":1,"height":1},{"id":"c8c5cdeb.d2094","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":45,"width":1,"height":1},{"id":"94470df.629b8f","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":46,"width":1,"height":1},{"id":"19fb79b1.db4d06","type":"ui_spacer","name":"spacer","group":"84084ec.d63dcb","order":47,"width":1,"height":1},{"id":"f86f6c1f.af706","type":"ui_spacer","name":"spacer","group":"a2345340.dcf1","order":1,"width":6,"height":1},{"id":"835d9681.f7c3e8","type":"ui_spacer","name":"spacer","group":"a2345340.dcf1","order":6,"width":6,"height":1},{"id":"f8af8307.41d8c","type":"ui_spacer","name":"spacer","group":"a2345340.dcf1","order":8,"width":6,"height":1},{"id":"3e9c32d0.a7e42e","type":"websocket-client","path":"ws://growbot-doser.local:8118","tls":"","wholemsg":"false"},{"id":"efc6ea82.963f78","type":"ui_tab","name":"Water Control","icon":"dashboard","order":4,"disabled":false,"hidden":false},{"id":"963f0a7c.dc1ca8","type":"ui_group","name":"Doser Calibration","tab":"efc6ea82.963f78","order":3,"disp":true,"width":"14","collapse":false},{"id":"b35587bd.c30058","type":"ui_group","name":"Nutrient Dosing","tab":"efc6ea82.963f78","order":1,"disp":true,"width":"14","collapse":false},{"id":"967933ee.45097","type":"ui_group","name":"Adjustment","tab":"efc6ea82.963f78","order":2,"disp":true,"width":"14","collapse":false},{"id":"ad827b3c.c02168","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":2,"width":6,"height":1},{"id":"9f0856a0.ec7a78","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":3,"width":6,"height":1},{"id":"af35513b.cf963","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":5,"width":6,"height":1},{"id":"751b7a8a.d7aec4","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":6,"width":6,"height":1},{"id":"350cc7df.0ff5f8","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":8,"width":6,"height":1},{"id":"e4cf3549.cc80f8","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":9,"width":6,"height":1},{"id":"c288595f.a94ec8","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":11,"width":6,"height":1},{"id":"b0443d50.6edd1","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":12,"width":6,"height":1},{"id":"30823085.6c595","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":14,"width":6,"height":1},{"id":"902ed822.40fc58","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":15,"width":6,"height":1},{"id":"87b8ae4e.a0748","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":17,"width":6,"height":1},{"id":"156e8a06.dc8076","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":18,"width":6,"height":1},{"id":"9a385412.423a08","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":19,"width":14,"height":1},{"id":"650c3bd5.503854","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":21,"width":6,"height":1},{"id":"19b45dcd.e6e6b2","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":22,"width":6,"height":1},{"id":"1c336cc1.fa3593","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":23,"width":14,"height":1},{"id":"b94e1579.d8ff48","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":25,"width":8,"height":1},{"id":"777a31a4.96bae","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":26,"width":8,"height":1},{"id":"6b88cf4c.0d905","type":"ui_spacer","name":"spacer","group":"b35587bd.c30058","order":27,"width":14,"height":1},{"id":"3d33dc44.4525b4","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":2,"width":3,"height":1},{"id":"d5df3506.f23b78","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":4,"width":3,"height":1},{"id":"3c1e5baa.a96ef4","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":5,"width":3,"height":1},{"id":"9e524aef.884f08","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":6,"width":3,"height":1},{"id":"c1fdcec7.a11f3","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":7,"width":3,"height":1},{"id":"be01bfc3.9e265","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":8,"width":3,"height":1},{"id":"1c5056c8.3bdfc9","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":9,"width":14,"height":1},{"id":"ad78b41e.a49fa8","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":11,"width":3,"height":1},{"id":"1140e141.bf755f","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":13,"width":3,"height":1},{"id":"581bd1c8.ef994","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":14,"width":3,"height":1},{"id":"fb0be364.a6e2c","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":15,"width":3,"height":1},{"id":"b660742b.29cde8","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":16,"width":3,"height":1},{"id":"17446ab5.487255","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":17,"width":3,"height":1},{"id":"ea04d5f.f966528","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":18,"width":14,"height":1},{"id":"62bfc40.998243c","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":20,"width":3,"height":1},{"id":"f87317e1.f8d268","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":22,"width":3,"height":1},{"id":"917330de.c5d4f","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":23,"width":3,"height":1},{"id":"bcd195ab.e63ac8","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":24,"width":3,"height":1},{"id":"d0f741fa.daeda","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":25,"width":3,"height":1},{"id":"a09f2399.d2e4b","type":"ui_spacer","name":"spacer","group":"967933ee.45097","order":26,"width":3,"height":1},{"id":"4346d267.19c95c","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":2,"width":3,"height":1},{"id":"589b1377.2c8bcc","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":3,"width":3,"height":1},{"id":"edb3cfec.ee523","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":4,"width":14,"height":1},{"id":"c73862e4.5a914","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":6,"width":5,"height":1},{"id":"4d8a8cce.b4ded4","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":7,"width":5,"height":1},{"id":"c513f29f.7da","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":8,"width":14,"height":1},{"id":"82da6215.03d61","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":11,"width":3,"height":1},{"id":"d7972d20.e5a5a","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":12,"width":3,"height":1},{"id":"92e6af8f.c4ada","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":13,"width":14,"height":1},{"id":"f7b0ad65.8a69f","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":16,"width":3,"height":1},{"id":"b630bda7.16eaf","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":17,"width":3,"height":1},{"id":"1190aca1.0fa863","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":18,"width":14,"height":1},{"id":"fbd1b2b8.e80f2","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":21,"width":3,"height":1},{"id":"e0b07016.0185b","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":22,"width":3,"height":1},{"id":"8d04232d.3ed3f","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":23,"width":14,"height":1},{"id":"392566a9.e8e16a","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":26,"width":3,"height":1},{"id":"c6f13ae5.d959b8","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":27,"width":3,"height":1},{"id":"741b4718.2aadb8","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":28,"width":14,"height":1},{"id":"34da2b0d.2b44f4","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":31,"width":3,"height":1},{"id":"8d813f9a.f3669","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":32,"width":3,"height":1},{"id":"75241599.8996ec","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":33,"width":14,"height":1},{"id":"27129f6.a68e46","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":36,"width":3,"height":1},{"id":"fee1b113.6a8bf","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":37,"width":3,"height":1},{"id":"327ffd9e.abb612","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":38,"width":14,"height":1},{"id":"381f4be9.caa2f4","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":39,"width":14,"height":1},{"id":"559472c0.93ef6c","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":41,"width":3,"height":1},{"id":"2ce88083.9a358","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":43,"width":3,"height":1},{"id":"43c4b276.2d353c","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":44,"width":3,"height":1},{"id":"24b1bc98.16c204","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":45,"width":3,"height":1},{"id":"b46d9ba6.7ce048","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":46,"width":14,"height":1},{"id":"5fab9f9f.90363","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":48,"width":3,"height":1},{"id":"11267a27.2e1f96","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":50,"width":3,"height":1},{"id":"6e712e28.e29ca","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":51,"width":3,"height":1},{"id":"7bc74409.a4981c","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":52,"width":3,"height":1},{"id":"1dd61811.a31bc8","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":53,"width":14,"height":1},{"id":"9d3bee0.7bcfd1","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":55,"width":3,"height":1},{"id":"fc1ec1d0.3abb7","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":57,"width":3,"height":1},{"id":"ae2a14b8.1ff8a8","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":58,"width":3,"height":1},{"id":"ccd0573d.fc8678","type":"ui_spacer","name":"spacer","group":"963f0a7c.dc1ca8","order":59,"width":3,"height":1},{"id":"f3add555.5efcc8","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":5,"width":2,"height":1},{"id":"b855d7ba.9caad8","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":10,"width":2,"height":1},{"id":"db67f1.caaff81","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":11,"width":2,"height":1},{"id":"8edf866d.13f538","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":12,"width":3,"height":1},{"id":"ec6c96c4.e3f458","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":16,"width":2,"height":1},{"id":"b8bc9bb4.66b858","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":17,"width":3,"height":1},{"id":"a940f3fb.7868a","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":20,"width":5,"height":1},{"id":"51aeb681.53fd78","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":21,"width":3,"height":1},{"id":"69edeb22.9db684","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":22,"width":5,"height":1},{"id":"796fde82.dfce5","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":23,"width":14,"height":1},{"id":"74b234c8.eb602c","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":26,"width":2,"height":1},{"id":"37f81275.14057e","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":27,"width":2,"height":1},{"id":"89c07795.8b2088","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":28,"width":2,"height":1},{"id":"6888cdad.f96614","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":31,"width":2,"height":1},{"id":"4700b54d.49fedc","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":32,"width":2,"height":1},{"id":"3dee7c25.8e37a4","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":33,"width":2,"height":1},{"id":"d611535a.293d4","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":36,"width":2,"height":1},{"id":"4a152944.8ad2b8","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":37,"width":2,"height":1},{"id":"5498733.961ce8c","type":"ui_spacer","name":"spacer","group":"60058375.2cde8c","order":38,"width":2,"height":1},{"id":"7e08ce63.2a86a","type":"ui_spacer","name":"spacer","group":"4975dc2d.9c4134","order":8,"width":1,"height":1},{"id":"cef2d3a3.2dfb4","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":4,"width":1,"height":1},{"id":"c757e6fe.62c618","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":6,"width":5,"height":1},{"id":"4c5b1a8c.affb44","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":8,"width":1,"height":1},{"id":"d959c6a4.d1a4b8","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":10,"width":1,"height":1},{"id":"8237dc2e.e85d8","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":13,"width":1,"height":1},{"id":"44ea3e3f.c328","type":"ui_spacer","name":"spacer","group":"ab3ec0cf.5f1fc","order":15,"width":5,"height":1},{"id":"ab039191.c3ca","type":"mqtt in","z":"38def9ff.21aea6","name":"Message from Growbot","topic":"GROWBOT","qos":"2","datatype":"auto","broker":"9243fa99.15cf28","nl":false,"rap":true,"rh":0,"x":120,"y":160,"wires":[["c77e13da.5bd4"]]},{"id":"c77e13da.5bd4","type":"function","z":"38def9ff.21aea6","name":"Parse binary data","func":"var offset = 0;\nif (msg.payload.length != 200) {\n    throw \"got wrong payload size of \" + msg.payload.length\n}\nvar readbool = function(skipBytes) {\n    var val = msg.payload.readUInt8(offset);\n    offset += 1;\n    if (skipBytes) {\n        offset += skipBytes;\n    }\n    return !!val;\n}\nvar readint = function() {\n    var val = msg.payload.readInt32LE(offset);\n    offset += 4;\n    return val;\n}\nvar readfloat = function() {\n    var val = msg.payload.readFloatLE(offset);\n    offset += 4;\n    return val;\n}\nmsg.payload = {\n        timestamp: Date.now(),\n        current_mode: readint(),\n        config: {\n            exhaustFanPercent: readint(),\n            intakeFanPercent: readint(),\n            roomFansPercent: readint(),\n            //these bool flags will be set later\n            exhaustFanOn: readbool(),\n            intakeFanOn: readbool(),\n            roomFansOn: readbool(),\n            overheadLightsOn: readbool(),\n            sideLightsOn: readbool(3),\n            exhaustFanCalibration: {\n                minOffset: readint(),\n                maxOffset: readint(),\n                spinUpSec: readint()\n            },\n            intakeFanCalibration: {\n                minOffset: readint(),\n                maxOffset: readint(),\n                spinUpSec: readint()\n            },\n            samplingIntervalMS: readint(),\n            waterChillerThermostat: {\n                mode: readint(),\n                minValue: readfloat(),\n                maxValue: readfloat()\n            }\n        },\n        data: {\n            exhaustInternal: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            exhaustExternal: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            intakeInternal: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            intakeExternal: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            ambientInternal1: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            ambientInternal2: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            ambientInternal3: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            lights: {\n                temperatureC: readfloat(),\n                humidity: readfloat()\n            },\n            luxAmbient1: readfloat(),\n            luxAmbient2: readfloat(),\n            luxAmbient3: readfloat(),\n            luxAmbient4: readfloat(),\n            luxAmbient5: readfloat(),\n            waterData: {\n                ph: Math.round(readfloat() * 1000)/1000,\n                tds: readfloat()\n            },\n            controlBucket: {\n                temperatureC: readfloat(),\n                waterLevelPercent: readfloat()\n            },\n            waterChillerStatus: readfloat(),\n            buckets: [\n                {\n                    temperatureC: readfloat(),\n                    waterLevelPercent: readfloat()\n                },\n                {\n                    temperatureC: readfloat(),\n                    waterLevelPercent: readfloat()\n                },\n                {\n                    temperatureC: readfloat(),\n                    waterLevelPercent: readfloat()\n                },\n                {\n                    temperatureC: readfloat(),\n                    waterLevelPercent: readfloat()\n                }\n            ]\n        }\n    }\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":220,"wires":[["16fea1c4.41d3ee","a592bce5.1b1f9","bcaab1eb.be397","2a17a643.05ef5a","1c99f341.c54e5d","db2e8a08.f1d4c8","ea81580f.b1d9d8","b9e9913b.47eae"]]},{"id":"1538449f.33dd9b","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"State History","x":790,"y":200,"wires":[[]]},{"id":"c82b9b1b.a92598","type":"inject","z":"38def9ff.21aea6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":40,"wires":[["d3a8d4d1.504b58","b81b9626.dd20e8"]]},{"id":"d3a8d4d1.504b58","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"fixed","sql":"create table if not exists states(timestamp integer, state_json TEXT);\ncreate index if not exists idx_states_timestamp on states (timestamp);\n\ncreate table if not exists data (\n    timestamp integer,\n    current_mode integer,\n    config_exhaustFanPercent integer,\n    config_intakeFanPercent integer,\n    config_roomFansPercent integer,\n    config_roomFansOn integer,\n    config_exhaustFanOn integer, \n    config_intakeFanOn integer,\n    config_overheadLightsOn integer,\n    config_sideLightsOn integer,\n    config_exhaustFanCalibration_minOffset integer,\n    config_exhaustFanCalibration_maxOffset integer,\n    config_exhaustFanCalibration_spinUpSec integer,\n    config_intakeFanCalibration_minOffset integer,\n    config_intakeFanCalibration_maxOffset integer,\n    config_intakeFanCalibration_spinUpSec integer,\n    config_samplingIntervalMS integer,\n    config_controlWaterLevelCalibration_fullCm real,\n    config_controlWaterLevelCalibration_emptyCm real,\n    config_waterChillerThermostat_mode integer,\n    config_waterChillerThermostat_minValue real,\n    config_waterChillerThermostat_maxValue real,\n    data_exhaustInternal_temperatureC real,\n    data_exhaustInternal_humidity real,\n    data_exhaustExternal_temperatureC real,\n    data_exhaustExternal_humidity real,\n    data_intakeExternal_temperatureC real,\n    data_intakeExternal_humidity real,\n    data_intakeInternal_temperatureC real,\n    data_intakeInternal_humidity real,    \n    data_ambientInternal1_temperatureC real,\n    data_ambientInternal1_humidity real,\n    data_ambientInternal2_temperatureC real,\n    data_ambientInternal2_humidity real,\n    data_ambientInternal3_temperatureC real,\n    data_ambientInternal3_humidity real,\n    data_lights_temperatureC real,\n    data_lights_humidity real,\n    data_luxAmbient1 real,\n    data_luxAmbient2 real,\n    data_luxAmbient3 real,\n    data_luxAmbient4 real,\n    data_luxAmbient5 real,\n    data_waterData_ph real,\n    data_waterData_tds real,\n    data_controlBucket_temperatureC real,\n    data_controlBucket_waterLevelPercent real,\n    data_waterChillerStatus real\n);\n\ncreate index if not exists idx_data_timestamp on data (timestamp);\n","name":"Create table","x":290,"y":40,"wires":[[]]},{"id":"16fea1c4.41d3ee","type":"function","z":"38def9ff.21aea6","name":"Create INSERT state SQL","func":"msg.topic = `INSERT INTO states (timestamp, state_json) VALUES ('${msg.payload.timestamp}', '${JSON.stringify(msg.payload)}')`;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":200,"wires":[["1538449f.33dd9b"]]},{"id":"c2f4374c.dace78","type":"ui_gauge","z":"38def9ff.21aea6","name":"Water Level","group":"60058375.2cde8c","order":8,"width":3,"height":2,"gtype":"gage","title":"","label":"percent","format":"{{msg.payload.data.controlBucket.waterLevelPercent}}","min":"0","max":"100","colors":["#739c9b","#00f508","#0154da"],"seg1":"20","seg2":"70","x":610,"y":380,"wires":[]},{"id":"6a4eb66c.beee98","type":"ui_gauge","z":"38def9ff.21aea6","name":"Water Temp","group":"60058375.2cde8c","order":9,"width":3,"height":2,"gtype":"gage","title":"","label":"°C","format":"{{msg.payload.data.controlBucket.temperatureC}}","min":"18","max":"30","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":610,"y":340,"wires":[]},{"id":"8178f4f8.97f6a8","type":"ui_gauge","z":"38def9ff.21aea6","name":"pH","group":"60058375.2cde8c","order":6,"width":3,"height":2,"gtype":"gage","title":"","label":"pH","format":"{{msg.payload.data.waterData.ph}}","min":"1","max":"14","colors":["#d50b0b","#00ff11","#f40b0b"],"seg1":"5","seg2":"7","x":590,"y":420,"wires":[]},{"id":"6121ea23.d626c4","type":"ui_gauge","z":"38def9ff.21aea6","name":"TDS","group":"60058375.2cde8c","order":7,"width":3,"height":2,"gtype":"gage","title":"","label":"PPM","format":"{{msg.payload.data.waterData.tds}}","min":0,"max":"1500","colors":["#9b9bbb","#22c601","#d7da34"],"seg1":"400","seg2":"850","x":590,"y":460,"wires":[]},{"id":"a592bce5.1b1f9","type":"function","z":"38def9ff.21aea6","name":"Update config global","func":"if (msg.payload && msg.payload.config) {\n    global.set(\"latest_config\", msg.payload.config);\n    msg.payload = global.get(\"latest_config\");\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":160,"y":820,"wires":[["1e9a2f31.4adbf1","30a58c4a.f0ab54","9f2b71f4.12f05","235f1cda.5d8974","20954f50.63017","b7eb3974.05cd48","85537df6.267d","7c23fe98.7cfd5","1d043f14.f989d1","6cc7f4fb.84dbec","455f35f5.73f89c","4dc7dfed.b14cc","9cb3125f.8aa02","5287ef08.940c6","518700c2.86539","10c67cde.9edc23","78e693e6.ab9dfc"]]},{"id":"54b560b5.3171c","type":"function","z":"38def9ff.21aea6","name":"Make binary config message","func":"var cfg = msg.payload;\nif (!cfg) {\n    return null;\n}\nvar buf = Buffer.alloc(60 + 1)\nvar offset = 0;\noffset = buf.writeUInt8(0x10, 0);\noffset = buf.writeInt32LE(cfg.exhaustFanPercent, offset);\noffset = buf.writeInt32LE(cfg.intakeFanPercent, offset);\noffset = buf.writeInt32LE(cfg.roomFansPercent, offset);\noffset = buf.writeUInt8(cfg.exhaustFanOn?1:0, offset);\noffset = buf.writeUInt8(cfg.intakeFanOn?1:0, offset);\noffset = buf.writeUInt8(cfg.roomFansOn?1:0, offset);\noffset = buf.writeUInt8(cfg.overheadLightsOn?1:0, offset);\noffset = buf.writeUInt8(cfg.sideLightsOn?1:0, offset);\noffset += 3;\noffset = buf.writeInt32LE(cfg.exhaustFanCalibration.minOffset, offset);\noffset = buf.writeInt32LE(cfg.exhaustFanCalibration.maxOffset, offset);\noffset = buf.writeInt32LE(cfg.exhaustFanCalibration.spinUpSec, offset);\n\noffset = buf.writeInt32LE(cfg.intakeFanCalibration.minOffset, offset);\noffset = buf.writeInt32LE(cfg.intakeFanCalibration.maxOffset, offset);\noffset = buf.writeInt32LE(cfg.intakeFanCalibration.spinUpSec, offset);\n\noffset = buf.writeInt32LE(cfg.samplingIntervalMS, offset);\n\noffset = buf.writeInt32LE(cfg.waterChillerThermostat.mode, offset);\noffset = buf.writeFloatLE(cfg.waterChillerThermostat.minValue, offset);\noffset = buf.writeFloatLE(cfg.waterChillerThermostat.maxValue, offset);\nmsg.payload = buf;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1220,"wires":[["b9e934c6.0c3088","4bdd593.3c9a5a8"]]},{"id":"b9e934c6.0c3088","type":"mqtt out","z":"38def9ff.21aea6","name":"Message to Growbot","topic":"GROWBOT_CONFIG","qos":"1","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"9243fa99.15cf28","x":1340,"y":1260,"wires":[]},{"id":"fb6302e.294a5","type":"function","z":"38def9ff.21aea6","name":"Make Mode Message","func":"\nvar buf = Buffer.alloc(2)\nvar offset = 0;\noffset = buf.writeUInt8(0x2, 0);\noffset = buf.writeUInt8(msg.payload, offset);\nmsg.payload = buf;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1320,"y":1360,"wires":[["b9e934c6.0c3088","4bdd593.3c9a5a8"]]},{"id":"c1496462.0a6128","type":"ui_numeric","z":"38def9ff.21aea6","name":"","label":"Sample Interval Sec","tooltip":"","group":"96d9d6c0.428e28","order":1,"width":0,"height":0,"wrap":false,"passthru":false,"topic":"samplingIntervalMS","topicType":"str","format":"{{value}}","min":"2","max":"300","step":1,"x":420,"y":900,"wires":[["1e277c7b.24f434"]]},{"id":"1e277c7b.24f434","type":"function","z":"38def9ff.21aea6","name":"s to ms","func":"msg.payload *= 1000;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":940,"wires":[["b99023c0.34ade"]]},{"id":"62106ceb.d03aa4","type":"ui_slider","z":"38def9ff.21aea6","name":"","label":"Exhaust Fan Min Offset","tooltip":"","group":"a2345340.dcf1","order":2,"width":6,"height":1,"passthru":false,"outs":"end","topic":"exhaustFanCalibration.minOffset","topicType":"str","min":"1","max":"30","step":1,"x":430,"y":980,"wires":[["b99023c0.34ade"]]},{"id":"8eb120.cfc12ee","type":"ui_slider","z":"38def9ff.21aea6","name":"","label":"Exhaust Fan Max Offset","tooltip":"","group":"a2345340.dcf1","order":3,"width":6,"height":1,"passthru":false,"outs":"end","topic":"exhaustFanCalibration.maxOffset","topicType":"str","min":"2","max":"31","step":1,"x":430,"y":1040,"wires":[["b99023c0.34ade"]]},{"id":"fb75fab0.36ba18","type":"debounce","z":"38def9ff.21aea6","time":1000,"name":"","x":880,"y":1180,"wires":[["54b560b5.3171c"]]},{"id":"c1bfb8c9.3f08d8","type":"ui_slider","z":"38def9ff.21aea6","name":"Exhaust Fan %","label":"","tooltip":"","group":"4975dc2d.9c4134","order":2,"width":3,"height":1,"passthru":false,"outs":"end","topic":"exhaustFanPercent","topicType":"str","min":0,"max":"100","step":1,"x":420,"y":1520,"wires":[["b99023c0.34ade"]]},{"id":"e91e05dc.c43a78","type":"function","z":"38def9ff.21aea6","name":"ms to s","func":"msg.payload = Math.floor(msg.payload/1000);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":860,"wires":[["c1496462.0a6128"]]},{"id":"6c82e2fe.0bdadc","type":"ui_slider","z":"38def9ff.21aea6","name":"","label":"Intake Fan Min Offset","tooltip":"","group":"a2345340.dcf1","order":4,"width":6,"height":1,"passthru":false,"outs":"end","topic":"intakeFanCalibration.minOffset","topicType":"str","min":"1","max":"30","step":1,"x":420,"y":1180,"wires":[["b99023c0.34ade"]]},{"id":"ecfc779b.312538","type":"ui_slider","z":"38def9ff.21aea6","name":"","label":"Intake Fan Max Offset","tooltip":"","group":"a2345340.dcf1","order":5,"width":6,"height":1,"passthru":false,"outs":"end","topic":"intakeFanCalibration.maxOffset","topicType":"str","min":"2","max":"31","step":1,"x":420,"y":1240,"wires":[["b99023c0.34ade"]]},{"id":"13687d27.19e803","type":"ui_slider","z":"38def9ff.21aea6","name":"Intake Fan %","label":"","tooltip":"","group":"4975dc2d.9c4134","order":4,"width":3,"height":1,"passthru":false,"outs":"end","topic":"intakeFanPercent","topicType":"str","min":0,"max":"100","step":1,"x":410,"y":1640,"wires":[["b99023c0.34ade"]]},{"id":"f456d781.81fc58","type":"ui_numeric","z":"38def9ff.21aea6","name":"","label":"Exhaust Fan Spin Up Sec","tooltip":"","group":"a2345340.dcf1","order":11,"width":0,"height":0,"wrap":false,"passthru":false,"topic":"exhaustFanCalibration.spinUpSec","topicType":"str","format":"{{value}}","min":0,"max":10,"step":1,"x":430,"y":1120,"wires":[["b99023c0.34ade"]]},{"id":"36ded48.4c2902c","type":"ui_numeric","z":"38def9ff.21aea6","name":"","label":"Intake Fan Spin Up Sec","tooltip":"","group":"a2345340.dcf1","order":12,"width":0,"height":0,"wrap":false,"passthru":false,"topic":"intakeFanCalibration.spinUpSec","topicType":"str","format":"{{value}}","min":0,"max":10,"step":1,"x":430,"y":1360,"wires":[["b99023c0.34ade"]]},{"id":"bb429536.281608","type":"topic-to-prop","z":"38def9ff.21aea6","name":"","topic":"","x":810,"y":1100,"wires":[["36a68c0c.f56414"]]},{"id":"b99023c0.34ade","type":"function","z":"38def9ff.21aea6","name":"Inject Latest Config","func":"if (!msg.origVal) {\n    msg.origVal = global.get(\"latest_config\");\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":1060,"wires":[["bb429536.281608"]]},{"id":"1e9a2f31.4adbf1","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"samplingIntervalMS","x":150,"y":880,"wires":[["e91e05dc.c43a78"]]},{"id":"30a58c4a.f0ab54","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"exhaustFanCalibration.minOffset","x":150,"y":980,"wires":[["62106ceb.d03aa4"]]},{"id":"9f2b71f4.12f05","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"exhaustFanCalibration.maxOffset","x":150,"y":1040,"wires":[["8eb120.cfc12ee"]]},{"id":"235f1cda.5d8974","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"exhaustFanPercent","x":170,"y":1520,"wires":[["c1bfb8c9.3f08d8"]]},{"id":"20954f50.63017","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"intakeFanCalibration.minOffset","x":150,"y":1180,"wires":[["6c82e2fe.0bdadc"]]},{"id":"b7eb3974.05cd48","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"intakeFanCalibration.maxOffset","x":150,"y":1240,"wires":[["ecfc779b.312538"]]},{"id":"85537df6.267d","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"intakeFanPercent","x":170,"y":1640,"wires":[["13687d27.19e803"]]},{"id":"7c23fe98.7cfd5","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"exhaustFanCalibration.spinUpSec","x":150,"y":1120,"wires":[["f456d781.81fc58"]]},{"id":"1d043f14.f989d1","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"intakeFanCalibration.spinUpSec","x":150,"y":1360,"wires":[["36ded48.4c2902c"]]},{"id":"36a68c0c.f56414","type":"function","z":"38def9ff.21aea6","name":"update global config","func":"if (msg.payload) {\n    global.set(\"latest_config\", msg.payload);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":1140,"wires":[["fb75fab0.36ba18"]]},{"id":"f971b716.a97688","type":"ui_gauge","z":"38def9ff.21aea6","name":"ambient temp","group":"60058375.2cde8c","order":18,"width":3,"height":2,"gtype":"gage","title":"","label":"°C","format":"{{msg.payload.data.ambientInternal1.temperatureC}}","min":"10","max":"35","colors":["#002aff","#00e62e","#ca3838"],"seg1":"20","seg2":"26","x":620,"y":300,"wires":[]},{"id":"b3d41dc.0ad40e","type":"ui_gauge","z":"38def9ff.21aea6","name":"ambient humid","group":"60058375.2cde8c","order":19,"width":3,"height":2,"gtype":"gage","title":"","label":"%","format":"{{msg.payload.data.ambientInternal1.humidity}}","min":"0","max":"100","colors":["#9f9fa3","#00e62e","#ca3838"],"seg1":"40","seg2":"060","x":620,"y":260,"wires":[]},{"id":"4587158c.a762bc","type":"ui_switch","z":"38def9ff.21aea6","name":"","label":"Exhaust Fan","tooltip":"","group":"4975dc2d.9c4134","order":1,"width":3,"height":1,"passthru":false,"decouple":"true","topic":"exhaustFanOn","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":410,"y":1460,"wires":[["b99023c0.34ade"]]},{"id":"4983696b.6ff698","type":"ui_switch","z":"38def9ff.21aea6","name":"","label":"Intake Fan","tooltip":"","group":"4975dc2d.9c4134","order":3,"width":3,"height":1,"passthru":false,"decouple":"true","topic":"intakeFanOn","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":410,"y":1580,"wires":[["b99023c0.34ade"]]},{"id":"f9627109.d1a74","type":"ui_switch","z":"38def9ff.21aea6","d":true,"name":"","label":"Room Fans Power","tooltip":"","group":"4975dc2d.9c4134","order":5,"width":2,"height":1,"passthru":false,"decouple":"true","topic":"roomFansOn","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":390,"y":2180,"wires":[["b99023c0.34ade"]]},{"id":"fcd8ecd.c55581","type":"ui_switch","z":"38def9ff.21aea6","d":true,"name":"","label":"Overhead Lights Power","tooltip":"","group":"4975dc2d.9c4134","order":6,"width":2,"height":1,"passthru":false,"decouple":"true","topic":"overheadLightsOn","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":410,"y":2240,"wires":[["b99023c0.34ade"]]},{"id":"ed6b28e4.d9faf8","type":"ui_switch","z":"38def9ff.21aea6","d":true,"name":"","label":"Side Lights On","tooltip":"","group":"4975dc2d.9c4134","order":7,"width":1,"height":1,"passthru":false,"decouple":"true","topic":"sideLightsOn","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":380,"y":2300,"wires":[["b99023c0.34ade"]]},{"id":"6cc7f4fb.84dbec","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"exhaustFanOn","x":170,"y":1460,"wires":[["4587158c.a762bc"]]},{"id":"455f35f5.73f89c","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"intakeFanOn","x":170,"y":1580,"wires":[["4983696b.6ff698"]]},{"id":"4dc7dfed.b14cc","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"roomFansOn","x":150,"y":2180,"wires":[["f9627109.d1a74"]]},{"id":"9cb3125f.8aa02","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"overheadLightsOn","x":150,"y":2240,"wires":[["fcd8ecd.c55581"]]},{"id":"5287ef08.940c6","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"sideLightsOn","x":150,"y":2300,"wires":[["ed6b28e4.d9faf8"]]},{"id":"bcaab1eb.be397","type":"function","z":"38def9ff.21aea6","name":"Round","func":"var newmsg = RED.util.cloneMessage(msg.payload);\nvar d = newmsg.data;\nd.exhaustInternal.temperatureC = Math.round(d.exhaustInternal.temperatureC * 100)/100;\nd.exhaustInternal.humidity = Math.round(d.exhaustInternal.humidity);\n\nd.exhaustExternal.temperatureC = Math.round(d.exhaustExternal.temperatureC * 100)/100;\nd.exhaustExternal.humidity = Math.round(d.exhaustExternal.humidity);\n\nd.intakeInternal.temperatureC = Math.round(d.intakeInternal.temperatureC * 100)/100;\nd.intakeInternal.humidity = Math.round(d.intakeInternal.humidity);\n\nd.intakeExternal.temperatureC = Math.round(d.intakeExternal.temperatureC * 100)/100;\nd.intakeExternal.humidity = Math.round(d.intakeExternal.humidity);\n\n\nd.ambientInternal1.temperatureC = Math.round(d.ambientInternal1.temperatureC * 100)/100;\nd.ambientInternal1.humidity = Math.round(d.ambientInternal1.humidity);\n\nd.ambientInternal2.temperatureC = Math.round(d.ambientInternal2.temperatureC * 100)/100;\nd.ambientInternal2.humidity = Math.round(d.ambientInternal2.humidity);\n\nd.ambientInternal3.temperatureC = Math.round(d.ambientInternal3.temperatureC * 100)/100;\nd.ambientInternal3.humidity = Math.round(d.ambientInternal3.humidity);\n\nd.lights.temperatureC = Math.round(d.lights.temperatureC * 100)/100;\nd.lights.humidity = Math.round(d.lights.humidity);\n\nd.controlBucket.temperatureC = Math.round(d.controlBucket.temperatureC * 100)/100;\nd.controlBucket.waterLevelPercent = Math.round(d.controlBucket.waterLevelPercent);\n\nd.waterData.ph = Math.round(d.waterData.ph * 100)/100;\nd.waterData.tds = Math.round(d.waterData.tds);\nmsg.payload = newmsg;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":280,"wires":[["c2f4374c.dace78","6a4eb66c.beee98","8178f4f8.97f6a8","6121ea23.d626c4","b3d41dc.0ad40e","f971b716.a97688","c28f12c2.accbf","85496d15.61f54","80055d4c.3c88a","13317070.09d97","7db0e518.6480cc","1dafdc9a.db0293","621f1363.70a14c"]]},{"id":"de0cb95.7b63f48","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"63d090d9.23eae","order":2,"width":0,"height":0,"passthru":false,"label":"Start pH Calibration","tooltip":"","color":"","bgcolor":"","icon":"","payload":"32","payloadType":"num","topic":"topic","topicType":"msg","x":1150,"y":1600,"wires":[["fb6302e.294a5"]]},{"id":"2a17a643.05ef5a","type":"function","z":"38def9ff.21aea6","name":"pH Calibration Button States","func":"let startCalibBtn = false;\nlet calibMidBtn = false;\nlet calibLowBtn = false;\nlet calibHighBtn = false;\nlet stopCalibBtn = false;\n\nswitch (msg.payload.current_mode) {\n    case 0x0:\n        //normal mode, not calibrating anything\n        startCalibBtn = true;\n        break;\n    case 0x20:\n        calibMidBtn = true;\n        stopCalibBtn = true;\n        break;\n    case 0x21:\n        calibLowBtn = true;\n        stopCalibBtn = true;\n        break;\n    case 0x22:\n        calibHighBtn = true;\n        stopCalibBtn = true;\n        break;\n}\nreturn [ {enabled: startCalibBtn},\n         {enabled: calibMidBtn},\n         {enabled: calibLowBtn},\n         {enabled: calibHighBtn},\n         {enabled: stopCalibBtn}\n         ];\n","outputs":5,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1740,"wires":[["de0cb95.7b63f48"],["540eabcf.43ed54"],["aa556b6d.2d7ec8"],["34eb2f96.2c353"],["483024b4.40893c"]]},{"id":"ea81580f.b1d9d8","type":"ui_text","z":"38def9ff.21aea6","group":"63d090d9.23eae","order":1,"width":0,"height":0,"name":"","label":"pH Reading","format":"{{msg.payload.data.waterData.ph}}","layout":"row-spread","x":1130,"y":1560,"wires":[]},{"id":"483024b4.40893c","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"63d090d9.23eae","order":6,"width":0,"height":0,"passthru":false,"label":"Cancel pH Calibration","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"num","topic":"topic","topicType":"msg","x":1160,"y":1840,"wires":[["fb6302e.294a5"]]},{"id":"540eabcf.43ed54","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"63d090d9.23eae","order":3,"width":0,"height":0,"passthru":false,"label":"Set pH MID Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"33","payloadType":"num","topic":"topic","topicType":"msg","x":1180,"y":1660,"wires":[["fb6302e.294a5"]]},{"id":"aa556b6d.2d7ec8","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"63d090d9.23eae","order":4,"width":0,"height":0,"passthru":false,"label":"Set pH LOW Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"34","payloadType":"num","topic":"topic","topicType":"msg","x":1190,"y":1720,"wires":[["fb6302e.294a5"]]},{"id":"34eb2f96.2c353","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"63d090d9.23eae","order":5,"width":0,"height":0,"passthru":false,"label":"Set ph HIGH Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"35","payloadType":"num","topic":"topic","topicType":"msg","x":1190,"y":1780,"wires":[["fb6302e.294a5"]]},{"id":"7618a18.355e46","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"8822534f.5b11a","order":2,"width":0,"height":0,"passthru":false,"label":"Start EC Calibration","tooltip":"","color":"","bgcolor":"","icon":"","payload":"48","payloadType":"num","topic":"topic","topicType":"msg","x":1140,"y":1980,"wires":[["fb6302e.294a5","c616cef8.16be6"]]},{"id":"1c99f341.c54e5d","type":"function","z":"38def9ff.21aea6","name":"EC Calibration Button States","func":"let startCalibBtn = false;\nlet calibDryBtn = false;\nlet calibLowBtn = false;\nlet calibHighBtn = false;\nlet stopCalibBtn = false;\n\nswitch (msg.payload.current_mode) {\n    case 0x0:\n        //normal mode, not calibrating anything\n        startCalibBtn = true;\n        break;\n    case 0x30:\n        calibDryBtn = true;\n        stopCalibBtn = true;\n        break;\n    case 0x31:\n        calibLowBtn = true;\n        stopCalibBtn = true;\n        break;\n    case 0x32:\n        calibHighBtn = true;\n        stopCalibBtn = true;\n        break;\n}\nreturn [ {enabled: startCalibBtn},\n         {enabled: calibDryBtn},\n         {enabled: calibLowBtn},\n         {enabled: calibHighBtn},\n         {enabled: stopCalibBtn}\n         ];\n","outputs":5,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":2040,"wires":[["7618a18.355e46"],["a820b768.7f5f48"],["3fc54d2f.5e82e2"],["e6a592e2.99a12"],["aa8a37.a552a5c8"]]},{"id":"aa8a37.a552a5c8","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"8822534f.5b11a","order":6,"width":0,"height":0,"passthru":false,"label":"Cancel EC Calibration","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"num","topic":"topic","topicType":"msg","x":1140,"y":2220,"wires":[["fb6302e.294a5"]]},{"id":"a820b768.7f5f48","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"8822534f.5b11a","order":3,"width":0,"height":0,"passthru":false,"label":"Set DRY EC Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"49","payloadType":"num","topic":"topic","topicType":"msg","x":1170,"y":2040,"wires":[["fb6302e.294a5"]]},{"id":"3fc54d2f.5e82e2","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"8822534f.5b11a","order":4,"width":0,"height":0,"passthru":false,"label":"Set LOW EC Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"50","payloadType":"num","topic":"topic","topicType":"msg","x":1170,"y":2100,"wires":[["fb6302e.294a5"]]},{"id":"e6a592e2.99a12","type":"ui_button","z":"38def9ff.21aea6","name":"","group":"8822534f.5b11a","order":5,"width":0,"height":0,"passthru":false,"label":"Set HIGH EC Calibration Point","tooltip":"","color":"","bgcolor":"","icon":"","payload":"51","payloadType":"num","topic":"topic","topicType":"msg","x":1170,"y":2160,"wires":[["fb6302e.294a5"]]},{"id":"db2e8a08.f1d4c8","type":"ui_text","z":"38def9ff.21aea6","group":"8822534f.5b11a","order":1,"width":0,"height":0,"name":"","label":"TDS Reading","format":"{{msg.payload.data.waterData.tds}}","layout":"row-spread","x":1140,"y":1920,"wires":[]},{"id":"c616cef8.16be6","type":"debug","z":"38def9ff.21aea6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":900,"y":1900,"wires":[]},{"id":"4bdd593.3c9a5a8","type":"debug","z":"38def9ff.21aea6","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1580,"y":1320,"wires":[]},{"id":"7db0e518.6480cc","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":1,"width":3,"height":1,"name":"","label":"pH","format":"{{msg.payload.data.waterData.ph}}","layout":"col-center","x":430,"y":420,"wires":[]},{"id":"1dafdc9a.db0293","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":2,"width":3,"height":1,"name":"","label":"TDS","format":"{{msg.payload.data.waterData.tds}}","layout":"col-center","x":430,"y":480,"wires":[]},{"id":"85496d15.61f54","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":14,"width":3,"height":1,"name":"","label":"Humidity","format":"{{msg.payload.data.ambientInternal1.humidity}}","layout":"col-center","x":460,"y":260,"wires":[]},{"id":"80055d4c.3c88a","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":4,"width":3,"height":1,"name":"","label":"Water Temp","format":"{{msg.payload.data.controlBucket.temperatureC}}","layout":"col-center","x":430,"y":340,"wires":[]},{"id":"13317070.09d97","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":3,"width":3,"height":1,"name":"","label":"Water Level","format":"{{msg.payload.data.controlBucket.waterLevelPercent}}","layout":"col-center","x":430,"y":380,"wires":[]},{"id":"c28f12c2.accbf","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":13,"width":3,"height":1,"name":"","label":"Temp","format":"{{msg.payload.data.ambientInternal1.temperatureC}}","layout":"col-center","x":450,"y":300,"wires":[]},{"id":"518700c2.86539","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"waterChillerThermostat.mode","x":150,"y":2360,"wires":[["3b71bad4.78b4c6"]]},{"id":"10c67cde.9edc23","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"waterChillerThermostat.minValue","x":150,"y":2420,"wires":[["1171405b.55971"]]},{"id":"78e693e6.ab9dfc","type":"prop-to-topic","z":"38def9ff.21aea6","name":"","prop":"waterChillerThermostat.maxValue","x":150,"y":2480,"wires":[["f4d1a692.735628"]]},{"id":"3b71bad4.78b4c6","type":"ui_dropdown","z":"38def9ff.21aea6","name":"Chiller Thermostat","label":"Chiller Thermostat Mode","tooltip":"","place":"Chiller Thermostat Mode","group":"a2345340.dcf1","order":7,"width":6,"height":1,"passthru":false,"multiple":false,"options":[{"label":"Off","value":"0","type":"str"},{"label":"Force On","value":"1","type":"str"},{"label":"Thermostat","value":"2","type":"str"}],"payload":"","topic":"waterChillerThermostat.mode","topicType":"str","x":390,"y":2360,"wires":[["b99023c0.34ade"]]},{"id":"1171405b.55971","type":"ui_numeric","z":"38def9ff.21aea6","name":"Chiller Thermostat Min","label":"Chiller Thermostat Min","tooltip":"","group":"a2345340.dcf1","order":10,"width":6,"height":1,"wrap":false,"passthru":false,"topic":"waterChillerThermostat.minValue","topicType":"str","format":"{{value}}","min":0,"max":"30","step":"0.25","x":400,"y":2420,"wires":[["b99023c0.34ade"]]},{"id":"f4d1a692.735628","type":"ui_numeric","z":"38def9ff.21aea6","name":"Chiller Thermostat Max","label":"Chiller Thermostat Max","tooltip":"","group":"a2345340.dcf1","order":9,"width":6,"height":1,"wrap":false,"passthru":false,"topic":"waterChillerThermostat.maxValue","topicType":"str","format":"{{value}}","min":0,"max":"30","step":"0.25","x":410,"y":2480,"wires":[["b99023c0.34ade"]]},{"id":"621f1363.70a14c","type":"ui_text","z":"38def9ff.21aea6","group":"60058375.2cde8c","order":15,"width":3,"height":1,"name":"","label":"Water Chiller","format":"{{msg.payload.data.waterChillerStatus?\"On\":\"Off\"}}","layout":"col-center","x":590,"y":540,"wires":[]},{"id":"6e62eb62.1ddca4","type":"websocket in","z":"638a1ba8.eab274","name":"","server":"","client":"3e9c32d0.a7e42e","x":180,"y":60,"wires":[["394ed6a.9969e2a","c5cf8e6d.97896","c11f574d.752a08"]]},{"id":"1aed25b7.bd2dca","type":"websocket out","z":"638a1ba8.eab274","name":"","server":"","client":"3e9c32d0.a7e42e","x":1420,"y":580,"wires":[]},{"id":"506baa6f.5f6324","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":9,"width":4,"height":2,"passthru":false,"label":"Dispense 1","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":280,"wires":[["86c22199.291e3"]]},{"id":"86c22199.291e3","type":"function","z":"638a1ba8.eab274","name":"Build Dispense 10sec Message","func":"const payload = { cmd: 0xA1, intVal: 10000, port: msg.payload }\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":520,"wires":[["18624c66.cf7564"]]},{"id":"394ed6a.9969e2a","type":"function","z":"638a1ba8.eab274","name":"","func":"var code = msg.payload.readUInt8(0);\nvar obj = {code : code };\nif (code == 0x3) {\n    obj.port = msg.payload.readUInt8(1);\n    obj.val = msg.payload.readFloatLE(2);    \n}\nmsg.payload = obj;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":40,"wires":[[]]},{"id":"b550609b.ce71c","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 1 Calibration","label":"Port 1 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":10,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":260,"wires":[["d680bd43.0471e"]]},{"id":"ffca773d.f9dde8","type":"function","z":"638a1ba8.eab274","name":"Set Globals","func":"if (msg.topic != \"DOSER_CALIBRATION\") {\n    return msg;    \n}\nlet calib = global.get(\"doser_calib\");\nif (!calib) {\n    calib = { };\n}\n\nconst port = msg.port;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":60,"wires":[[]]},{"id":"568ed0cb.af9bd","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 2 Calibration","label":"Port 2 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":15,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":300,"wires":[["71317960.a7c518"]]},{"id":"e142676a.1d7bd8","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 3 Calibration","label":"Port 3 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":20,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":340,"wires":[["d26630aa.b120f"]]},{"id":"5e00f5d4.3a325c","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 4 Calibration","label":"Port 4 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":25,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":380,"wires":[["5fa4f3fa.88325c"]]},{"id":"b033d61f.320248","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 5 Calibration","label":"Port 5 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":30,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":420,"wires":[["c602da97.babb88"]]},{"id":"b6b092b1.50dc","type":"ui_numeric","z":"638a1ba8.eab274","name":"Port 6 Calibration","label":"Port 6 Calibration (mL/sec)","tooltip":"","group":"963f0a7c.dc1ca8","order":35,"width":7,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":".1","max":"9","step":".01","x":430,"y":460,"wires":[["2304e976.221506"]]},{"id":"d680bd43.0471e","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 1","func":"const payload = {\n    cmd: 0xB2,\n    port: 0,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":260,"wires":[["d95335.401eccc8"]]},{"id":"18624c66.cf7564","type":"function","z":"638a1ba8.eab274","name":"Build Binary Message","func":"const buf = Buffer.alloc(6);\nlet offset = 0;\nbuf.writeUInt8(msg.payload.cmd, offset);\noffset++;\nif (msg.payload.port || msg.payload.port === 0) {\n    buf.writeUInt8(msg.payload.port, offset);\n    offset++;\n}\nif (msg.payload.intVal || msg.payload.intVal === 0) {\n    buf.writeInt32LE(msg.payload.intVal, offset);\n    offset +=4;\n} else if (msg.payload.floatVal || msg.payload.floatVal === 0) {\n    buf.writeFloatLE(msg.payload.floatVal, offset);\n    offset +=4;\n}\nmsg.payload = buf;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":720,"wires":[["1aed25b7.bd2dca"]]},{"id":"71317960.a7c518","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 2","func":"const payload = {\n    cmd: 0xB2,\n    port: 1,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":300,"wires":[["ab1adc85.06084"]]},{"id":"d26630aa.b120f","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 3","func":"const payload = {\n    cmd: 0xB2,\n    port: 2,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":340,"wires":[["e145188.fcbb8e8"]]},{"id":"5fa4f3fa.88325c","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 4","func":"const payload = {\n    cmd: 0xB2,\n    port: 3,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":380,"wires":[["bb8161ba.02d3d"]]},{"id":"c602da97.babb88","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 5","func":"const payload = {\n    cmd: 0xB2,\n    port: 4,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":420,"wires":[["20676da5.48dd72"]]},{"id":"2304e976.221506","type":"function","z":"638a1ba8.eab274","name":"Make Calib Port 6","func":"const payload = {\n    cmd: 0xB2,\n    port: 5,\n    floatVal: msg.payload\n};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":460,"wires":[["ff19946f.401998"]]},{"id":"2c6331fc.828a1e","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":14,"width":4,"height":2,"passthru":false,"label":"Dispense 2","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":320,"wires":[["86c22199.291e3"]]},{"id":"466341f1.c14a9","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":19,"width":4,"height":2,"passthru":false,"label":"Dispense 3","tooltip":"","color":"","bgcolor":"","icon":"","payload":"2","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":360,"wires":[["86c22199.291e3"]]},{"id":"b9374ba6.b4e628","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":24,"width":4,"height":2,"passthru":false,"label":"Dispense 4","tooltip":"","color":"","bgcolor":"","icon":"","payload":"3","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":400,"wires":[["86c22199.291e3"]]},{"id":"e75d7030.2aae5","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":29,"width":4,"height":2,"passthru":false,"label":"Dispense 5","tooltip":"","color":"","bgcolor":"","icon":"","payload":"4","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":440,"wires":[["86c22199.291e3"]]},{"id":"eb23976a.a7e448","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":34,"width":4,"height":2,"passthru":false,"label":"Dispense 6","tooltip":"","color":"","bgcolor":"","icon":"","payload":"5","payloadType":"num","topic":"topic","topicType":"msg","x":150,"y":480,"wires":[["86c22199.291e3"]]},{"id":"7889e971.673d28","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":1,"width":11,"height":2,"passthru":false,"label":"Refresh Calibration","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":150,"y":220,"wires":[["41a54a2c.d265f4"]]},{"id":"41a54a2c.d265f4","type":"function","z":"638a1ba8.eab274","name":"Build all ports refresh msg","func":"\nconst ret = []\n\nfor (let i = 0; i < 6; i++) {\n    ret.push({\n         topic: msg.topic,\n         payload: { cmd: 0xB1, port: i }\n     });\n}\n\nreturn [ret];","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":220,"wires":[["18624c66.cf7564"]]},{"id":"c5cf8e6d.97896","type":"function","z":"638a1ba8.eab274","name":"Breakout Calib Msgs","func":"var code = msg.payload.readUInt8(0);\nif (code != 0x3) {\n    return null;\n    \n}\nconst ret = [];\nconst port = msg.payload.readUInt8(1);\nfor (let i = 0; i < port; i++) {\n    ret.push(null);\n}\nret.push( { payload: msg.payload.readFloatLE(2) });\nfor (let i = port+1; i < 6; i++) {\n    ret.push(null);\n}\n\nreturn ret;","outputs":6,"noerr":0,"initialize":"","finalize":"","libs":[],"x":160,"y":140,"wires":[["b550609b.ce71c"],["568ed0cb.af9bd"],["e142676a.1d7bd8"],["5e00f5d4.3a325c"],["b033d61f.320248"],["b6b092b1.50dc"]]},{"id":"d95335.401eccc8","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":260,"wires":[["18624c66.cf7564"]]},{"id":"ab1adc85.06084","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":300,"wires":[["18624c66.cf7564"]]},{"id":"bb8161ba.02d3d","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":380,"wires":[["18624c66.cf7564"]]},{"id":"e145188.fcbb8e8","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":340,"wires":[["18624c66.cf7564"]]},{"id":"20676da5.48dd72","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":420,"wires":[["18624c66.cf7564"]]},{"id":"ff19946f.401998","type":"debounce","z":"638a1ba8.eab274","time":1000,"name":"","x":800,"y":460,"wires":[["18624c66.cf7564"]]},{"id":"ae466857.639cc8","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":40,"width":4,"height":2,"passthru":false,"label":"Prime 1","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":620,"wires":[["8cfea5df.267f98"]]},{"id":"ca2668c2.e43858","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":42,"width":4,"height":2,"passthru":false,"label":"Prime  2","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":660,"wires":[["8cfea5df.267f98"]]},{"id":"382b04b9.5e414c","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":47,"width":4,"height":2,"passthru":false,"label":"Prime  3","tooltip":"","color":"","bgcolor":"","icon":"","payload":"2","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":700,"wires":[["8cfea5df.267f98"]]},{"id":"f02a7004.5ea07","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":49,"width":4,"height":2,"passthru":false,"label":"Prime  4","tooltip":"","color":"","bgcolor":"","icon":"","payload":"3","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":740,"wires":[["8cfea5df.267f98"]]},{"id":"2f806dcf.d37a22","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":54,"width":4,"height":2,"passthru":false,"label":"Prime  5","tooltip":"","color":"","bgcolor":"","icon":"","payload":"4","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":780,"wires":[["8cfea5df.267f98"]]},{"id":"a7e3e2f0.eb3de","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"963f0a7c.dc1ca8","order":56,"width":4,"height":2,"passthru":false,"label":"Prime 6","tooltip":"","color":"","bgcolor":"","icon":"","payload":"5","payloadType":"num","topic":"topic","topicType":"msg","x":140,"y":820,"wires":[["8cfea5df.267f98"]]},{"id":"8cfea5df.267f98","type":"function","z":"638a1ba8.eab274","name":"Build Dispense ML Message","func":"const payload = { cmd: 0xA1, intVal: 1500, port: msg.payload }\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":740,"wires":[["18624c66.cf7564"]]},{"id":"39e2da4a.fa35c6","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":10,"width":4,"height":3,"passthru":false,"label":"0.5mL CaliMagic","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"num","topic":"topic","topicType":"msg","x":260,"y":1820,"wires":[["7d42f8aa.cad448"]]},{"id":"1ff3f885.2d2bd7","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":12,"width":4,"height":3,"passthru":false,"label":"0.5mL Micro","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"topic","topicType":"msg","x":250,"y":1860,"wires":[["7d42f8aa.cad448"]]},{"id":"b3d67d2b.dac35","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":19,"width":4,"height":3,"passthru":false,"label":"0.5mL Grow","tooltip":"","color":"","bgcolor":"","icon":"","payload":"2","payloadType":"num","topic":"topic","topicType":"msg","x":260,"y":1900,"wires":[["7d42f8aa.cad448"]]},{"id":"caf7b42.08a2248","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":21,"width":4,"height":3,"passthru":false,"label":"0.5mL Bloom","tooltip":"","color":"","bgcolor":"","icon":"","payload":"3","payloadType":"num","topic":"topic","topicType":"msg","x":250,"y":1940,"wires":[["7d42f8aa.cad448"]]},{"id":"85bd501.9974eb","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"CaliMagic tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":1,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"0","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":330,"y":1220,"wires":[["eda2f19a.35472"]]},{"id":"1ba2f06a.765b2","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"Micro tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":4,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"1","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":310,"y":1260,"wires":[["eda2f19a.35472"]]},{"id":"d9c46ded.d942f","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"Grow tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":7,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"2","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":310,"y":1300,"wires":[["eda2f19a.35472"]]},{"id":"24d56dce.424d22","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"Bloom tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":10,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"3","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":320,"y":1340,"wires":[["eda2f19a.35472"]]},{"id":"42309a00.bf2194","type":"function","z":"638a1ba8.eab274","name":"Read Nute Config","func":"\nconst nutes = global.get(\"nutrient_config\") || {};\nif (!nutes.portRatios) {\n    nutes.portRatios = [0,0,0,0,0,0];\n}\nif (!nutes.delaySecBetween) {\n    nutes.delaySecBetween = 10;\n}\nconst ret = [];\nfor (let i = 0; i < 6; i++) {\n    ret.push({ payload: nutes.portRatios[i]||0});\n}\nret.push({payload: nutes.delaySecBetween});\nreturn ret;","outputs":7,"noerr":0,"initialize":"","finalize":"","libs":[],"x":110,"y":1180,"wires":[["85bd501.9974eb"],["1ba2f06a.765b2"],["d9c46ded.d942f"],["24d56dce.424d22"],["3875815e.c499de"],["22133cf8.8bf494"],["a163db1d.dfe978"]]},{"id":"7e555a1c.b8d6d4","type":"inject","z":"638a1ba8.eab274","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":70,"y":1000,"wires":[["42309a00.bf2194","41a54a2c.d265f4","5956e351.3b8c3c"]]},{"id":"3875815e.c499de","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"pH Up tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":16,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"4","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":320,"y":1380,"wires":[["eda2f19a.35472"]]},{"id":"22133cf8.8bf494","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"pH Down tsp/Gal","tooltip":"","group":"b35587bd.c30058","order":13,"width":8,"height":2,"wrap":false,"passthru":true,"topic":"5","topicType":"str","format":"{{value}}","min":0,"max":10,"step":"0.125","x":330,"y":1420,"wires":[["eda2f19a.35472"]]},{"id":"eda2f19a.35472","type":"function","z":"638a1ba8.eab274","name":"Save Global Ratios","func":"\nconst nutes = global.get(\"nutrient_config\") || {};\nif (!nutes.portRatios) {\n    nutes.portRatios = [0,0,0,0,0,0];\n}\nif (msg.topic == \"delay\") {\n    nutes.delaySecBetween = msg.payload;\n} else {\n    nutes.portRatios[msg.topic] = msg.payload;\n}\n\nglobal.set(\"nutrient_config\", nutes);\nreturn null;","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":1240,"wires":[]},{"id":"c8de860.7583b78","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"Gallons of Water","tooltip":"","group":"b35587bd.c30058","order":20,"width":8,"height":2,"wrap":false,"passthru":false,"topic":"topic","topicType":"msg","format":"{{value}}","min":0,"max":10,"step":"0.25","x":310,"y":1640,"wires":[["f5dacd6.6115f3"]]},{"id":"2bd91765.c7cf28","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"b35587bd.c30058","order":24,"width":6,"height":2,"passthru":false,"label":"Add All Nutes","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"payload","topicType":"msg","x":320,"y":1540,"wires":[["1964fe1c.55f282"]]},{"id":"1964fe1c.55f282","type":"function","z":"638a1ba8.eab274","name":"Make dosage messages","func":"const gal = global.get(\"gallons_of_water\");\nif (!gal) {\n    return null;\n}\nconst nutes = global.get(\"nutrient_config\");\nif (!nutes || !nutes.portRatios || nutes.delaySecBetween === null || nutes.delaySecBetween === undefined) {\n    return null;\n}\nconst ret = [];\nlet delayCtr = 0\nfor (let i = 0; i < 6; i++) {\n    if (nutes.portRatios[i] == 0) {\n        continue;\n    }\n    const mlPerGal = nutes.portRatios[i] * 4.92892;\n    const tot = mlPerGal * gal;\n    \n    ret.push({delay: delayCtr, payload: { cmd: 0xA0, port: i, floatVal: tot }});\n    if (i != 5) {\n        delayCtr += nutes.delaySecBetween * 1000;\n    }\n}\nreturn [ret, {payload: \"no\", enabled: false}, { payload: \"yes\", delay: delayCtr, enabled: true}];","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":1620,"wires":[["2343e8c.d0e5018"],["2bd91765.c7cf28"],["b45905d9.ceee58"]]},{"id":"a163db1d.dfe978","type":"ui_numeric","z":"638a1ba8.eab274","name":"","label":"Delay Sec Between","tooltip":"","group":"963f0a7c.dc1ca8","order":5,"width":9,"height":2,"wrap":false,"passthru":false,"topic":"delay","topicType":"str","format":"{{value}}","min":0,"max":"30","step":1,"x":330,"y":1180,"wires":[["eda2f19a.35472"]]},{"id":"2343e8c.d0e5018","type":"delay","z":"638a1ba8.eab274","name":"Delay Between","pauseType":"delayv","timeout":"10000","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1020,"y":1640,"wires":[["18624c66.cf7564"]]},{"id":"f5dacd6.6115f3","type":"function","z":"638a1ba8.eab274","name":"","func":"global.set(\"gallons_of_water\", msg.payload);\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":1720,"wires":[[]]},{"id":"5956e351.3b8c3c","type":"function","z":"638a1ba8.eab274","name":"Read gallons","func":"msg.payload = global.get(\"gallons_of_water\") || 0;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":100,"y":1460,"wires":[["c8de860.7583b78"]]},{"id":"b45905d9.ceee58","type":"delay","z":"638a1ba8.eab274","name":"Delay Between","pauseType":"delayv","timeout":"10000","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":680,"y":1760,"wires":[["2bd91765.c7cf28"]]},{"id":"4a4490a7.05358","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":3,"width":4,"height":3,"passthru":false,"label":"0.5mL pH UP Shot","tooltip":"","color":"","bgcolor":"","icon":"","payload":"4","payloadType":"num","topic":"payload","topicType":"msg","x":270,"y":2000,"wires":[["7d42f8aa.cad448"]]},{"id":"f1609208.9e011","type":"ui_button","z":"638a1ba8.eab274","name":"","group":"967933ee.45097","order":1,"width":4,"height":3,"passthru":false,"label":"0.5mL pH DOWN Shot","tooltip":"","color":"","bgcolor":"","icon":"","payload":"5","payloadType":"num","topic":"payload","topicType":"msg","x":280,"y":2040,"wires":[["7d42f8aa.cad448"]]},{"id":"7d42f8aa.cad448","type":"function","z":"638a1ba8.eab274","name":"Build Dispense 0.25mL Message","func":"const payload = { cmd: 0xA0, floatVal: .001, port: msg.payload }\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":1840,"wires":[["18624c66.cf7564"]]},{"id":"dd3e92c2.20771","type":"ui_template","z":"638a1ba8.eab274","group":"b35587bd.c30058","name":"Make buttons bigger","order":28,"width":0,"height":0,"format":"<div ng-bind-html=\"msg.payload\">\n    <script>\n        var style=document.getElementById('growbotstyle');\n        if (!style) {\n            style=document.createElement('style');\n            style.id = 'growbotstyle';\n        \n        }\n        \nstyle.type='text/css';\n\nvar cssStyles = `\n.nr-dashboard-numeric > * .down-button {\n\twidth: 96px !important;\n\theight: 96px !important;\n}\n\n.nr-dashboard-numeric > * .up-button {\n\twidth: 96px !important;\n\theight: 96px !important;\n}\n\n.nr-dashboard-numeric > * .down-button > * ng-md-icon {\n\ttransform: scale(2)\t\n}\n\n.nr-dashboard-numeric > * .up-button > * ng-md-icon {\n\ttransform: scale(2)\t\n}\n\n`;\nif(style.styleSheet){\n    style.styleSheet.cssText=cssStyles;\n}else{\n    style.appendChild(document.createTextNode(cssStyles));\n}\ndocument.getElementsByTagName('head')[0].appendChild(style);\n    </script>\n    \n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":760,"y":820,"wires":[[]]},{"id":"e5da1e94.44b1f","type":"ui_date_picker","z":"68dd499a.a366c8","name":"Start Date","label":"Start Date","group":"ab3ec0cf.5f1fc","order":1,"width":7,"height":1,"passthru":true,"topic":"startdate","topicType":"str","x":100,"y":140,"wires":[["f28325f4.59bf78"]]},{"id":"3ec05563.b8968a","type":"ui_date_picker","z":"68dd499a.a366c8","name":"End Date","label":"End Date","group":"ab3ec0cf.5f1fc","order":2,"width":7,"height":1,"passthru":true,"topic":"enddate","topicType":"str","x":120,"y":200,"wires":[["f28325f4.59bf78"]]},{"id":"f28325f4.59bf78","type":"function","z":"68dd499a.a366c8","name":"Date Global Setters","func":"if (msg.topic == \"startdate\") {\n    global.set(\"history_start_timestamp\", new Date(msg.payload).getTime());\n} else if (msg.topic == \"enddate\") {\n    global.set(\"history_start_timestamp\", new Date(msg.payload).getTime());\n} \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":140,"wires":[[]]},{"id":"638db2b3.12e6fc","type":"ui_button","z":"68dd499a.a366c8","name":"","group":"ab3ec0cf.5f1fc","order":16,"width":0,"height":0,"passthru":false,"label":"Go","tooltip":"","color":"","bgcolor":"","icon":"","payload":"go","payloadType":"str","topic":"topic","topicType":"msg","x":110,"y":300,"wires":[["280076bc.39b6fa"]]},{"id":"b9e9913b.47eae","type":"function","z":"38def9ff.21aea6","name":"Create VALUE insert","func":"let fields = \"\";\nlet values = \"\";\nconst addOne = (field, val) => {\n\tfields  += field + \",\";\n\tvalues += val + \",\";\n};\n\nlet obj = msg.payload;\nif (!obj || !Object.keys(obj)) {\n\treturn null;\n}\nfor (let key of Object.keys(obj)) {\n\tlet val = obj[key];\n\tlet fname = key;\n\tif (val == null) {\n\t\taddOne(fname, \"null\");\n\t}\n\telse if (typeof val === \"object\") {\n\t\tfor (let subkey of Object.keys(val)) {\n\t\t\tif (subkey == \"buckets\" || subkey == \"bucketWaterLevelCalibration\" || subkey == \"pumpPercent\" || subkey == \"pumpOn\" || subkey == \"pumpCalibration\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet subval = val[subkey];\n\t\t\tlet subfname = fname + \"_\" + subkey;\n\t\t\tif (subval == null) {\n\t\t\t\taddOne(subfname, \"null\");\n\t\t\t}\n\t\t\telse if (typeof subval === \"object\") {\n\t\t\t\tfor (let subsubkey of Object.keys(subval)) {\n\t\t\t\t\tlet subsubval = subval[subsubkey];\n\t\t\t\t\tlet subsubfname = subfname + \"_\" + subsubkey;\n\n\t\t\t\t\tif (subsubval === null) {\n\t\t\t\t\t\taddOne(subsubfname, \"null\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof subsubval === \"string\") {\n\t\t\t\t\t\taddOne(subsubfname, \"'\" + subsubval.replace(/\\'/g,\"''\") + \"'\");                            \n\t\t\t\t\t} else if (Number.isNaN(subsubval)) {\n\t\t\t\t\t\taddOne(subsubfname, \"null\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddOne(subsubfname, subsubval.toString());\n\t\t\t\t\t}                        \n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\tif (subval === null) {\n\t\t\t\t\t\taddOne(subfname, \"null\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof subval === \"string\") {\n\t\t\t\t\t\taddOne(subfname, \"'\" + subval.replace(/\\'/g,\"''\") + \"'\");\n\t\t\t\t\t} else if (Number.isNaN(subval)) {\n\t\t\t\t\t\taddOne(subfname, \"null\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddOne(subfname, subval.toString());\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (val === null) {\n\t\t\taddOne(fname, \"null\");\n\t\t}\n\t\telse if (typeof val === \"string\") {\n\t\t\taddOne(fname, \"'\" + val.replace(/\\'/g,\"''\") + \"'\");\n\t\t} else if (Number.isNaN(val)) {\n\t\t\taddOne(fname, \"NaN\");\n\t\t} else {\n\t\t\taddOne(fname, val.toString());\n\t\t}\n\t}\n}\nfields = fields.substr(0, fields.length - 1);\nvalues = values.substr(0, values.length - 1);\n\nmsg.topic = `INSERT INTO data (${fields}) VALUES (${values});`;\nmsg.payload = msg.topic;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":160,"wires":[["eb38bf14.88356"]]},{"id":"eb38bf14.88356","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"State History","x":790,"y":160,"wires":[[]]},{"id":"b81b9626.dd20e8","type":"function","z":"38def9ff.21aea6","name":"Load spatialite extension","func":"msg.extension = \"/usr/local/lib/mod_spatialite\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":80,"wires":[["435139e.499a1c8"]]},{"id":"435139e.499a1c8","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":570,"y":80,"wires":[[]]},{"id":"3ce5cc32.00c424","type":"inject","z":"5959bea1.7796f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":40,"wires":[["55a71829.6ada58"]]},{"id":"55a71829.6ada58","type":"function","z":"5959bea1.7796f","name":"Load spatialite extension","func":"msg.extension = \"/usr/local/lib/mod_spatialite\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":40,"wires":[["228b7c98.70acf4"]]},{"id":"228b7c98.70acf4","type":"sqlite","z":"5959bea1.7796f","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":610,"y":40,"wires":[[]]},{"id":"fee43b17.6dceb8","type":"sqlite","z":"5959bea1.7796f","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":460,"y":140,"wires":[["243294e1.5fd19c"]]},{"id":"1e23d36f.1f0d5d","type":"function","z":"5959bea1.7796f","name":"Build Simplified Query","func":"if (!msg.payload.fields) {\n    return null;\n}\nconst startStamp = msg.payload.startStamp;\nconst endStamp = msg.payload.endStamp;\nconst fieldDefs = [];\nconst allFields = [\n                ['config_exhaustFanPercent', 1],\n                ['config_intakeFanPercent', 1],\n                ['config_exhaustFanOn', 1],\n                ['config_intakeFanOn', 1],\n                ['data_ambientInternal1_temperatureC', .25],\n                ['data_ambientInternal1_humidity', 1],\n                ['data_luxAmbient1', 1],\n                ['data_waterData_ph', .05],\n                ['data_waterData_tds', 1],\n                ['data_controlBucket_temperatureC', .25],\n                ['data_controlBucket_waterLevelPercent', 10],\n                ['data_waterChillerStatus', 1]\n        ];\nfor (let field of allFields) {\n    if (msg.payload.fields.includes(field[0])) {\n        fieldDefs.push(field);\n    }\n}\nlet innerFieldStr = \"timestamp*1.0 as timestamp, \";\nlet outerFieldStr = \"\";\nfor (let fieldDef of fieldDefs) {\n        innerFieldStr += `${fieldDef[0]}*1.0 as ${fieldDef[0]}, `;\n        outerFieldStr += `AsText(ST_Simplify(MakeLine(ST_Point(timestamp, ${fieldDef[0]})),${fieldDef[1]})) as ${fieldDef[0]}, `;\n}\ninnerFieldStr = innerFieldStr.substr(0, innerFieldStr.length - 2);\nouterFieldStr = outerFieldStr.substr(0, outerFieldStr.length - 2);\n\nlet sql = `select ${outerFieldStr} from (select ${innerFieldStr} from data where timestamp >= ${startStamp} and timestamp <= ${endStamp} order by timestamp asc) x group by '';`\nmsg.topic = sql;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":200,"wires":[["fee43b17.6dceb8"]]},{"id":"73bccbe4.8fcbb4","type":"inject","z":"5959bea1.7796f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"test","payloadType":"str","x":80,"y":180,"wires":[["e4b538ed.e7b688"]]},{"id":"e4b538ed.e7b688","type":"function","z":"5959bea1.7796f","name":"set query params","func":"msg.payload = {fields: [\n            \"data_ambientInternal1_temperatureC\",\n            \"data_ambientInternal1_humidity\",\n            \"data_waterData_ph\",\n            \"data_waterData_tds\",\n            'data_luxAmbient1',\n            'data_controlBucket_temperatureC',\n            'data_controlBucket_waterLevelPercent',\n            'data_waterChillerStatus'\n        ],\n        startStamp: global.get(\"history_start_timestamp\") || (Date.now() - 86400000),\n        endStamp: global.get(\"history_end_timestamp\") || Date.now()\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":320,"wires":[["1e23d36f.1f0d5d"]]},{"id":"243294e1.5fd19c","type":"function","z":"5959bea1.7796f","name":"Parse spatialite","func":"if (!msg.payload[0]) {\n    return null;\n}\nlet data = {};\nlet row = msg.payload[0];\nfor (let field of Object.keys(row)) {\n\n    let points = row[field];\n    points = points.split(\"(\")[1];\n    points = points.substr(0, points.length - 1);\n    points = points.split(\",\");\n    data[field] = points.map(x => { let tmp = x.trim().split(\" \"); return { x: new Date(Math.round(tmp[0])), y: parseFloat(tmp[1]) }; });\n}\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":340,"wires":[["bb5993d6.5f578"]]},{"id":"bb5993d6.5f578","type":"function","z":"5959bea1.7796f","name":"Charts Builder","func":"var waterTemp = {series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [[], []], \"labels\": ['Water Temp C (on)', 'Water Temp C (off)']};\nvar waterTempOn = waterTemp.data[0];\nvar waterTempOff = waterTemp.data[1];\nvar waterLevel = {series: ['Water Level'], data: [msg.payload.data_controlBucket_waterLevelPercent], labels: ['Water Level']};\nvar ph = {series: ['pH'], data: [msg.payload.data_waterData_ph], labels:['pH']};\nvar tds = {series: ['TDS'], data: [msg.payload.data_waterData_tds], labels: ['TDS']};\nvar airTemp = {series: ['Ambient Temp'], data: [msg.payload.data_ambientInternal1_temperatureC], labels: ['Ambient Temp']};\nvar airHumidity = {series: ['Ambient Humidity'], data: [msg.payload.data_ambientInternal1_humidity], labels: ['Ambient Humidity']};\n\nlet log = [];\nconst wc = msg.payload.data_waterChillerStatus;\n\nlet combined = {}\nfor (let temp of msg.payload.data_controlBucket_temperatureC) {\n    combined[temp.x.getTime()] = { stamp: temp.x, temp: temp.y };\n}\nfor (let chiller of msg.payload.data_waterChillerStatus) {\n    const cTime = chiller.x.getTime();\n    if (!combined[cTime]) {\n        combined[chiller.x.getTime()] = {stamp: chiller.x, on: chiller.y > 0};\n    } else {\n        combined[chiller.x.getTime()][\"on\"] = chiller.y > 0;\n    }\n}\nlet keys = Object.keys(combined).sort();\nif (keys.length > 0) {\n    let lastOn = false;\n    let firstTempKey = keys.find(x=> typeof combined[x].temp !== \"undefined\");\n    let lastTemp = null;\n    let lastTempStamp = combined[keys[0]].stamp;\n    if (firstTempKey !== null) {\n        lastTemp = combined[firstTempKey].temp;\n        lastTempStamp = combined[firstTempKey].stamp;\n    }\n    \n    for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const obj = combined[k];\n        \n        if (typeof obj.on === 'undefined') {\n            obj.on = lastOn;\n        } else {\n            lastOn = obj.on;\n        }\n        if (typeof obj.temp === 'undefined') {\n\n            let ctr = 1;\n            while ((ctr + i) < keys.length - 1 && typeof combined[keys[ctr + i]].temp  === 'undefined') ctr++;\n            if ((ctr + i) >= keys.length || combined[keys[ctr + i]].temp === 'undefined') {\n                obj.temp = lastTemp;\n            } else {\n                const next = combined[keys[ctr + i]];\n                const timeDiff = next.stamp.getTime() - lastTempStamp.getTime();\n                const tempDiff = next.temp - lastTemp;\n                const totOffs = Math.round((tempDiff / timeDiff) * (obj.stamp.getTime() - lastTempStamp.getTime()) * 100) / 100;\n                obj.temp = lastTemp + totOffs;\n                obj.adjusted = true;\n            }\n\n        } else {\n            lastTemp = obj.temp;\n            lastTempStamp = obj.stamp;\n        }\n    }\n    lastOn = false;\n    let first = true;\n    for (let k of keys) {\n        const d = combined[k];\n        const transition =false;// d.on != lastOn;\n    \n        if (d.on) {\n            waterTempOn.push({x: d.stamp, y: d.temp });\n            waterTempOff.push({x: d.stamp, y: transition?d.temp:null });\n        } else {\n            waterTempOn.push({x: d.stamp, y: transition?d.temp:null });\n            waterTempOff.push({x: d.stamp, y: d.temp });\n        }\n        if (first) {\n            first = false;\n        }\n        lastVal = d.temp;\n        lastOn = d.on;\n    }\n\n}\n\nreturn [{  payload: [waterTemp] }, \n        { payload: [waterLevel] },\n        { payload: [ph] },\n        { payload: [tds] },\n        { payload: [airTemp] },\n        { payload: [airHumidity] }\n];\n","outputs":6,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":460,"wires":[[],[],[],[],[],[]]},{"id":"b39ff1be.5708","type":"inject","z":"68dd499a.a366c8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":40,"wires":[["adcd11dc.f5a82"]]},{"id":"adcd11dc.f5a82","type":"function","z":"68dd499a.a366c8","name":"Load spatialite extension","func":"msg.extension = \"/usr/local/lib/mod_spatialite\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":40,"wires":[["17267c13.d20064"]]},{"id":"17267c13.d20064","type":"sqlite","z":"68dd499a.a366c8","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":730,"y":40,"wires":[[]]},{"id":"12737952.1e2057","type":"sqlite","z":"68dd499a.a366c8","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":810,"y":400,"wires":[["3edc45e8.1c39fa","e72c1c85.b11de"]]},{"id":"90c1492b.97dc38","type":"function","z":"68dd499a.a366c8","name":"Build Simplified Query","func":"if (!msg.payload.fields) {\n    return null;\n}\nconst startStamp = msg.payload.startStamp;\nconst endStamp = msg.payload.endStamp;\nconst fieldDefs = [];\nconst allFields = [\n                ['config_exhaustFanPercent', 1],\n                ['config_intakeFanPercent', 1],\n                ['config_exhaustFanOn', 1],\n                ['config_intakeFanOn', 1],\n                ['data_ambientInternal1_temperatureC', .25],\n                ['data_ambientInternal1_humidity', 1],\n                ['data_luxAmbient1', 1],\n                ['data_waterData_ph', .01],\n                ['data_waterData_tds', 1],\n                ['data_controlBucket_temperatureC', .25],\n                ['data_controlBucket_waterLevelPercent', 10],\n                ['data_waterChillerStatus', 1]\n        ];\nfor (let field of allFields) {\n    if (msg.payload.fields.includes(field[0])) {\n        fieldDefs.push(field);\n    }\n}\nlet innerFieldStr = \"timestamp*1.0 as timestamp, \";\nlet outerFieldStr = \"\";\nfor (let fieldDef of fieldDefs) {\n        innerFieldStr += `${fieldDef[0]}*1.0 as ${fieldDef[0]}, `;\n        outerFieldStr += `AsText(ST_Simplify(MakeLine(ST_Point(timestamp, ${fieldDef[0]})),${fieldDef[1]})) as ${fieldDef[0]}, `;\n}\ninnerFieldStr = innerFieldStr.substr(0, innerFieldStr.length - 2);\nouterFieldStr = outerFieldStr.substr(0, outerFieldStr.length - 2);\n\nlet sql = `select ${outerFieldStr} from (select ${innerFieldStr} from data where timestamp >= ${startStamp} and timestamp <= ${endStamp} order by timestamp asc) x group by '';`\nmsg.topic = sql;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":300,"wires":[["12737952.1e2057"]]},{"id":"280076bc.39b6fa","type":"function","z":"68dd499a.a366c8","name":"set query params","func":"var startStamp = global.get(\"history_start_timestamp\") || (Date.now() - 86400000);\nstartStamp = new Date(startStamp);\nstartStamp.setHours(0,0,0,0);\nvar endStamp = global.get(\"history_end_timestamp\") || Date.now();\nendStamp = new Date(endStamp);\nendStamp.setHours(0,0,0,0);\nendStamp.setDate(endStamp.getDate() + 1);\nmsg.payload = {fields: [\n            \"data_ambientInternal1_temperatureC\",\n            \"data_ambientInternal1_humidity\",\n            \"data_waterData_ph\",\n            \"data_waterData_tds\",\n            'data_luxAmbient1',\n            'data_controlBucket_temperatureC',\n            'data_controlBucket_waterLevelPercent',\n            'data_waterChillerStatus'\n        ],\n        startStamp: startStamp.getTime(),\n        endStamp: endStamp.getTime()\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":300,"wires":[["90c1492b.97dc38"]]},{"id":"3edc45e8.1c39fa","type":"function","z":"68dd499a.a366c8","name":"Parse spatialite","func":"if (!msg.payload[0]) {\n    return null;\n}\nlet data = {};\nlet row = msg.payload[0];\nfor (let field of Object.keys(row)) {\n\n    let points = row[field];\n    points = points.split(\"(\")[1];\n    points = points.substr(0, points.length - 1);\n    points = points.split(\",\");\n    data[field] = points.map(x => { let tmp = x.trim().split(\" \"); return { x: new Date(Math.round(tmp[0])), y: parseFloat(tmp[1]) }; });\n}\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":500,"wires":[["ab9baf7a.e392d"]]},{"id":"ab9baf7a.e392d","type":"function","z":"68dd499a.a366c8","name":"Charts Builder","func":"var waterTemp = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [[], []], \"labels\": ['Water Temp C (on)', 'Water Temp C (off)'], color: \"#4444ff\"};\nvar waterTempOn = waterTemp.data[0];\nvar waterTempOff = waterTemp.data[1];\nvar waterTempOnSeries = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [waterTempOn, []], \"labels\": ['Water Temp C (on)'], color: \"#3333ff\"};\nvar waterTempOffSeries = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [waterTempOff], \"labels\": ['Water Temp C (off)'], color: \"#444444\"};\nvar waterLevel = {scale: 'percent', series: ['Water Level'], data: [msg.payload.data_controlBucket_waterLevelPercent], labels: ['Water Level'], color: \"#0cc9c0\"};\nvar ph = {scale: 'ph', series: ['pH'], data: [msg.payload.data_waterData_ph.filter(d => d.y > 0 && d.y <= 14)], labels:['pH'], color: '#ff0000'};\nvar tds = {scale: 'tds', series: ['TDS'], data: [msg.payload.data_waterData_tds.filter(d => d.y > 0 && d.y < 2000)], labels: ['TDS'], color: '#00ff00'};\nvar airTemp = {scale: 'tempc', series: ['Ambient Temp'], data: [msg.payload.data_ambientInternal1_temperatureC.filter(d => d.y > 0 && d.y < 100)], labels: ['Ambient Temp'], color: '#b726d4'};\nvar airHumidity = {scale: 'percent', series: ['Ambient Humidity'], data: [msg.payload.data_ambientInternal1_humidity.filter(d => d.y > 0 && d.y < 100)], labels: ['Ambient Humidity'], color: '#deb514'};\n\nlet log = [];\n\nlet combined = {}\nfor (let temp of msg.payload.data_controlBucket_temperatureC.filter(d => d.y > 0 && d.y < 100)) {\n    combined[temp.x.getTime()] = { stamp: temp.x, temp: temp.y };\n}\nfor (let chiller of msg.payload.data_waterChillerStatus) {\n    const cTime = chiller.x.getTime();\n    if (!combined[cTime]) {\n        combined[chiller.x.getTime()] = {stamp: chiller.x, on: chiller.y > 0};\n    } else {\n        combined[chiller.x.getTime()][\"on\"] = chiller.y > 0;\n    }\n}\nlet keys = Object.keys(combined).sort();\nif (keys.length > 0) {\n    let lastOn = false;\n    let firstTempKey = keys.find(x=> typeof combined[x].temp !== \"undefined\");\n    let lastTemp = null;\n    let lastTempStamp = combined[keys[0]].stamp;\n    if (firstTempKey !== null) {\n        lastTemp = combined[firstTempKey].temp;\n        lastTempStamp = combined[firstTempKey].stamp;\n    }\n    \n    for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const obj = combined[k];\n        \n        if (typeof obj.on === 'undefined') {\n            obj.on = lastOn;\n        } else {\n            lastOn = obj.on;\n        }\n        if (typeof obj.temp === 'undefined') {\n\n            let ctr = 1;\n            while ((ctr + i) < keys.length - 1 && typeof combined[keys[ctr + i]].temp  === 'undefined') ctr++;\n            if ((ctr + i) >= keys.length || combined[keys[ctr + i]].temp === 'undefined') {\n                obj.temp = lastTemp;\n            } else {\n                const next = combined[keys[ctr + i]];\n                const timeDiff = next.stamp.getTime() - lastTempStamp.getTime();\n                const tempDiff = next.temp - lastTemp;\n                const totOffs = Math.round((tempDiff / timeDiff) * (obj.stamp.getTime() - lastTempStamp.getTime()) * 100) / 100;\n                obj.temp = lastTemp + totOffs;\n                obj.adjusted = true;\n            }\n\n        } else {\n            lastTemp = obj.temp;\n            lastTempStamp = obj.stamp;\n        }\n    }\n    lastOn = false;\n    let first = true;\n    for (let k of keys) {\n        const d = combined[k];\n        const transition = d.on != lastOn && first == false;\n    \n        if (d.on) {\n            if (transition) {\n                waterTempOff.push({x: d.stamp, y: d.temp });\n                waterTempOn.push({x: d.stamp, y: d.temp });\n            } else {\n                waterTempOn.push({x: d.stamp, y: d.temp });\n                waterTempOff.push({x: d.stamp, y: null });\n            }\n            \n        } else {\n            if (transition) {\n                waterTempOn.push({x: d.stamp, y: d.temp });\n                waterTempOff.push({x: d.stamp, y: d.temp });\n            } else {\n                waterTempOn.push({x: d.stamp, y: null });\n                waterTempOff.push({x: d.stamp, y: d.temp });\n            }\n        }\n        if (first) {\n            first = false;\n        }\n        lastVal = d.temp;\n        lastOn = d.on;\n    }\n\n}\n\nreturn [{  payload: [waterTempOnSeries] },\n        {  payload: [waterTempOffSeries] }, \n        { payload: [waterLevel] },\n        { payload: [ph] },\n        { payload: [tds] },\n        { payload: [airTemp] },\n        { payload: [airHumidity]}\n];\n","outputs":7,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":700,"wires":[["8538e84c.ab2e08"],["8538e84c.ab2e08"],["f2cea99.a8bfa58"],["db9dae8.0eaff5"],["af71055c.18f7c8"],["86d57a23.c136a8"],["711b3b8b.d31ec4"]]},{"id":"6d263b8d.302fb4","type":"inject","z":"68dd499a.a366c8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"clear","payload":"","payloadType":"date","x":120,"y":820,"wires":[["43fb15a6.3c224c"]]},{"id":"8538e84c.ab2e08","type":"switch","z":"68dd499a.a366c8","name":"Show water temp","property":"show_water_temp","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":530,"y":600,"wires":[["43fb15a6.3c224c"]]},{"id":"86d57a23.c136a8","type":"switch","z":"68dd499a.a366c8","name":"Show ambient temp","property":"show_ambient_temp","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":540,"y":760,"wires":[["43fb15a6.3c224c"]]},{"id":"711b3b8b.d31ec4","type":"switch","z":"68dd499a.a366c8","name":"Show ambient humidity","property":"show_ambient_humidity","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":550,"y":800,"wires":[["43fb15a6.3c224c"]]},{"id":"f2cea99.a8bfa58","type":"switch","z":"68dd499a.a366c8","name":"Show water level","property":"show_water_level","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":530,"y":640,"wires":[["43fb15a6.3c224c"]]},{"id":"db9dae8.0eaff5","type":"switch","z":"68dd499a.a366c8","name":"Show ph","property":"show_ph","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":500,"y":680,"wires":[["43fb15a6.3c224c"]]},{"id":"af71055c.18f7c8","type":"switch","z":"68dd499a.a366c8","name":"Show tds","property":"show_tds","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":500,"y":720,"wires":[["43fb15a6.3c224c"]]},{"id":"f81174f6.6cae58","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_water_temp","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":920,"wires":[[]]},{"id":"9850f607.ca37d8","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"Water Temp","tooltip":"","group":"ab3ec0cf.5f1fc","order":5,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":150,"y":920,"wires":[["f81174f6.6cae58"]]},{"id":"e9fad6a6.b8dcc8","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"Water Level","tooltip":"","group":"ab3ec0cf.5f1fc","order":3,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":150,"y":960,"wires":[["7aafc5e2.5dbd3c"]]},{"id":"7aafc5e2.5dbd3c","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_water_level","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":960,"wires":[[]]},{"id":"a5c84f5d.9d515","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"pH","tooltip":"","group":"ab3ec0cf.5f1fc","order":7,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":130,"y":1000,"wires":[["49ff973c.996378"]]},{"id":"49ff973c.996378","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_ph","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":1000,"wires":[[]]},{"id":"e77dfa16.ad2af8","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"TDS","tooltip":"","group":"ab3ec0cf.5f1fc","order":9,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":130,"y":1040,"wires":[["69bfb58f.115ffc"]]},{"id":"69bfb58f.115ffc","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_tds","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":1040,"wires":[[]]},{"id":"64b9d12.0ce043","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"Air Temp","tooltip":"","group":"ab3ec0cf.5f1fc","order":14,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":140,"y":1080,"wires":[["869f6fd3.5041f"]]},{"id":"869f6fd3.5041f","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_ambient_temp","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":1080,"wires":[[]]},{"id":"9cd49838.6380c8","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"Air Humid","tooltip":"","group":"ab3ec0cf.5f1fc","order":12,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":140,"y":1120,"wires":[["ed1409ee.d2d1f8"]]},{"id":"ed1409ee.d2d1f8","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_ambient_humidity","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":390,"y":1120,"wires":[[]]},{"id":"34d90e7.15bfef2","type":"function","z":"38def9ff.21aea6","name":"Charts Builder","func":"var waterTemp = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [[], []], \"labels\": ['Water Temp C (on)', 'Water Temp C (off)'], color: \"#4444ff\"};\nvar waterTempOn = waterTemp.data[0];\nvar waterTempOff = waterTemp.data[1];\nvar waterTempOnSeries = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [waterTempOn, []], \"labels\": ['Water Temp C (on)'], color: \"#3333ff\"};\nvar waterTempOffSeries = {scale: 'tempc', series: ['Water Temp C (on)', 'Water Temp C (off)'], data: [waterTempOff], \"labels\": ['Water Temp C (off)'], color: \"#444444\"};\nvar waterLevel = {scale: 'percent', series: ['Water Level'], data: [msg.payload.data_controlBucket_waterLevelPercent], labels: ['Water Level'], color: \"#0cc9c0\"};\nvar ph = {scale: 'ph', series: ['pH'], data: [msg.payload.data_waterData_ph.filter(d => d.y > 0 && d.y <= 14)], labels:['pH'], color: '#ff0000'};\nvar tds = {scale: 'tds', series: ['TDS'], data: [msg.payload.data_waterData_tds.filter(d => d.y > 0 && d.y < 2000)], labels: ['TDS'], color: '#00ff00'};\nvar airTemp = {scale: 'tempc', series: ['Ambient Temp'], data: [msg.payload.data_ambientInternal1_temperatureC.filter(d => d.y > 0 && d.y < 100)], labels: ['Ambient Temp'], color: '#b726d4'};\nvar airHumidity = {scale: 'percent', series: ['Ambient Humidity'], data: [msg.payload.data_ambientInternal1_humidity.filter(d => d.y > 0 && d.y < 100)], labels: ['Ambient Humidity'], color: '#deb514'};\n\nlet log = [];\n\nlet combined = {}\nfor (let temp of msg.payload.data_controlBucket_temperatureC.filter(d => d.y > 0 && d.y < 100)) {\n    combined[temp.x.getTime()] = { stamp: temp.x, temp: temp.y };\n}\nfor (let chiller of msg.payload.data_waterChillerStatus) {\n    const cTime = chiller.x.getTime();\n    if (!combined[cTime]) {\n        combined[chiller.x.getTime()] = {stamp: chiller.x, on: chiller.y > 0};\n    } else {\n        combined[chiller.x.getTime()][\"on\"] = chiller.y > 0;\n    }\n}\nlet keys = Object.keys(combined).sort();\nif (keys.length > 0) {\n    let lastOn = false;\n    let firstTempKey = keys.find(x=> typeof combined[x].temp !== \"undefined\");\n    let lastTemp = null;\n    let lastTempStamp = combined[keys[0]].stamp;\n    if (firstTempKey !== null) {\n        lastTemp = combined[firstTempKey].temp;\n        lastTempStamp = combined[firstTempKey].stamp;\n    }\n    \n    for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const obj = combined[k];\n        \n        if (typeof obj.on === 'undefined') {\n            obj.on = lastOn;\n        } else {\n            lastOn = obj.on;\n        }\n        if (typeof obj.temp === 'undefined') {\n\n            let ctr = 1;\n            while ((ctr + i) < keys.length - 1 && typeof combined[keys[ctr + i]].temp  === 'undefined') ctr++;\n            if ((ctr + i) >= keys.length || combined[keys[ctr + i]].temp === 'undefined') {\n                obj.temp = lastTemp;\n            } else {\n                const next = combined[keys[ctr + i]];\n                const timeDiff = next.stamp.getTime() - lastTempStamp.getTime();\n                const tempDiff = next.temp - lastTemp;\n                const totOffs = Math.round((tempDiff / timeDiff) * (obj.stamp.getTime() - lastTempStamp.getTime()) * 100) / 100;\n                obj.temp = lastTemp + totOffs;\n                obj.adjusted = true;\n            }\n\n        } else {\n            lastTemp = obj.temp;\n            lastTempStamp = obj.stamp;\n        }\n    }\n    lastOn = false;\n    let first = true;\n    for (let k of keys) {\n        const d = combined[k];\n        const transition = d.on != lastOn && first == false;\n    \n        if (d.on) {\n            if (transition) {\n                waterTempOff.push({x: d.stamp, y: d.temp });\n                waterTempOn.push({x: d.stamp, y: d.temp });\n            } else {\n                waterTempOn.push({x: d.stamp, y: d.temp });\n                waterTempOff.push({x: d.stamp, y: null });\n            }\n            \n        } else {\n            if (transition) {\n                waterTempOn.push({x: d.stamp, y: d.temp });\n                waterTempOff.push({x: d.stamp, y: d.temp });\n            } else {\n                waterTempOn.push({x: d.stamp, y: null });\n                waterTempOff.push({x: d.stamp, y: d.temp });\n            }\n        }\n        if (first) {\n            first = false;\n        }\n        lastVal = d.temp;\n        lastOn = d.on;\n    }\n\n}\n\nreturn [{  payload: [waterTempOnSeries] },\n        {  payload: [waterTempOffSeries] }, \n        { payload: [waterLevel] },\n        { payload: [ph] },\n        { payload: [tds] },\n        { payload: [airTemp] },\n        { payload: [airHumidity]}\n];\n","outputs":7,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":680,"wires":[["db01cb96.ce2198"],["db01cb96.ce2198"],["1738b8a1.4336c7"],["6ee22302.8a431c"],["376999e6.46b316"],["3c20b2cc.1a290e"],["7e91e096.4df32"]]},{"id":"79517c7e.8d33e4","type":"function","z":"38def9ff.21aea6","name":"set query params","func":"const hourLen = 6;\nvar startStamp = new Date((Date.now() - hourLen * 60 * 60 * 1000));\nvar endStamp = new Date();\n\nmsg.payload = {fields: [\n            \"data_ambientInternal1_temperatureC\",\n            \"data_ambientInternal1_humidity\",\n            \"data_waterData_ph\",\n            \"data_waterData_tds\",\n            'data_luxAmbient1',\n            'data_controlBucket_temperatureC',\n            'data_controlBucket_waterLevelPercent',\n            'data_waterChillerStatus'\n        ],\n        startStamp: startStamp.getTime(),\n        endStamp: endStamp.getTime()\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":300,"wires":[["46115878.d50288"]]},{"id":"46115878.d50288","type":"function","z":"38def9ff.21aea6","name":"Build Simplified Query","func":"if (!msg.payload.fields) {\n    return null;\n}\nconst startStamp = msg.payload.startStamp;\nconst endStamp = msg.payload.endStamp;\nconst fieldDefs = [];\nconst allFields = [\n                ['config_exhaustFanPercent', 1],\n                ['config_intakeFanPercent', 1],\n                ['config_exhaustFanOn', 1],\n                ['config_intakeFanOn', 1],\n                ['data_ambientInternal1_temperatureC', .25],\n                ['data_ambientInternal1_humidity', 1],\n                ['data_luxAmbient1', 1],\n                ['data_waterData_ph', .01],\n                ['data_waterData_tds', 1],\n                ['data_controlBucket_temperatureC', .25],\n                ['data_controlBucket_waterLevelPercent', 10],\n                ['data_waterChillerStatus', 1]\n        ];\nfor (let field of allFields) {\n    if (msg.payload.fields.includes(field[0])) {\n        fieldDefs.push(field);\n    }\n}\nlet innerFieldStr = \"timestamp*1.0 as timestamp, \";\nlet outerFieldStr = \"\";\nfor (let fieldDef of fieldDefs) {\n        innerFieldStr += `${fieldDef[0]}*1.0 as ${fieldDef[0]}, `;\n        outerFieldStr += `AsText(ST_Simplify(MakeLine(ST_Point(timestamp, ${fieldDef[0]})),${fieldDef[1]})) as ${fieldDef[0]}, `;\n}\ninnerFieldStr = innerFieldStr.substr(0, innerFieldStr.length - 2);\nouterFieldStr = outerFieldStr.substr(0, outerFieldStr.length - 2);\n\nlet sql = `select ${outerFieldStr} from (select ${innerFieldStr} from data where timestamp >= ${startStamp} and timestamp <= ${endStamp} order by timestamp asc) x group by '';`\nmsg.topic = sql;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1240,"y":300,"wires":[["33767619.3924da"]]},{"id":"33767619.3924da","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":1250,"y":400,"wires":[["b096e98c.3363b8","3ce02c53.419524"]]},{"id":"b096e98c.3363b8","type":"function","z":"38def9ff.21aea6","name":"Parse spatialite","func":"if (!msg.payload[0]) {\n    return null;\n}\nlet data = {};\nlet row = msg.payload[0];\nfor (let field of Object.keys(row)) {\n\n    let points = row[field];\n    points = points.split(\"(\")[1];\n    points = points.substr(0, points.length - 1);\n    points = points.split(\",\");\n    data[field] = points.map(x => { let tmp = x.trim().split(\" \"); return { x: new Date(Math.round(tmp[0])), y: parseFloat(tmp[1]) }; });\n}\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1240,"y":500,"wires":[["34d90e7.15bfef2"]]},{"id":"fc1aaa02.eefd88","type":"inject","z":"38def9ff.21aea6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"30","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1090,"y":180,"wires":[["79517c7e.8d33e4"]]},{"id":"95dffbf6.f7d3d8","type":"inject","z":"38def9ff.21aea6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"clear","payload":"","payloadType":"date","x":1080,"y":120,"wires":[["db01cb96.ce2198","1738b8a1.4336c7","6ee22302.8a431c","376999e6.46b316","3c20b2cc.1a290e","7e91e096.4df32"]]},{"id":"3e813a67.f7e3b6","type":"ui_ui_control","z":"38def9ff.21aea6","name":"","events":"all","x":840,"y":300,"wires":[["79517c7e.8d33e4"]]},{"id":"1f4c3e78.761792","type":"function","z":"638a1ba8.eab274","name":"Create dosing table","func":"node.send({payload:{}, topic: `create table if not exists dosing (\n\ttimestamp integer,\n\tport integer,\n\tml integer\n);`});\nsetTimeout(() => {\n    node.send({payload: {}, topic: `create index if not exists idx_dosing_timestamp on dosing (timestamp);`});\n}, 5000);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1250,"y":60,"wires":[["bcf7e578.09f018"]]},{"id":"bcf7e578.09f018","type":"sqlite","z":"638a1ba8.eab274","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":1510,"y":60,"wires":[[]]},{"id":"5b057936.598758","type":"inject","z":"638a1ba8.eab274","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1030,"y":60,"wires":[["1f4c3e78.761792"]]},{"id":"c11f574d.752a08","type":"function","z":"638a1ba8.eab274","name":"Make dosing INSERT","func":"\nvar code = msg.payload.readUInt8(0);\nif (code != 0x1) {\n    return null;\n}\n\nconst port = msg.payload.readUInt8(1);\nconst ml = msg.payload.readFloatLE(2);\n\nlet sql = `INSERT INTO dosing (timestamp, port, ml) VALUES (${Date.now()}, ${port}, ${ml});`;\n\nmsg.topic = sql;\nmsg.payload = {};\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":140,"wires":[["ffb9d39.d04463"]]},{"id":"ffb9d39.d04463","type":"sqlite","z":"638a1ba8.eab274","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":830,"y":140,"wires":[[]]},{"id":"1a59a70.0383059","type":"ui_template","z":"68dd499a.a366c8","group":"ab3ec0cf.5f1fc","name":"Apex chart","order":17,"width":14,"height":6,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":990,"y":680,"wires":[[]]},{"id":"508b8ead.7c2ed","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"pH","order":29,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1390,"y":700,"wires":[[]]},{"id":"3e24b1fe.1df88e","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"TDS","order":30,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1390,"y":740,"wires":[[]]},{"id":"9eebd533.45dfb8","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"Ambient Temp","order":34,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1420,"y":780,"wires":[[]]},{"id":"a834b17d.b20a4","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"Ambient Humid","order":35,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1420,"y":820,"wires":[[]]},{"id":"e0667f67.8f75e","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"Water Level","order":24,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1410,"y":660,"wires":[[]]},{"id":"30999e74.020ca2","type":"ui_template","z":"38def9ff.21aea6","group":"60058375.2cde8c","name":"Water Temp","order":25,"width":6,"height":3,"format":"<div class=\"nr-dashboard-chart-container\" style=\"width:100%; height:100%;\"> <div class=\"nr-dashboard-chart-nolabel\" style=\"height: calc(100% - 25px); overflow-x: visible; overflow-y: visible;\"  ng-bind-html=\"eleContent | trusted\"></div></div>\n<script>\n    \n    ;(function(scope) {\n        if (typeof ApexCharts === 'undefined') {\n            if (!document.getElementById('apexcharts_script')) {\n                let scriptElement = document.createElement(\"script\");\n                scriptElement.src = \"https://cdn.jsdelivr.net/npm/apexcharts\";\n                document.head.appendChild(scriptElement);\n                console.log(\"injected apexcharts script\");\n            }\n            if (!document.getElementById('apexcharts_style')) {\n                let styleElement = document.createElement(\"style\");\n                styleElement.src = \"https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.27.3/apexcharts.min.css\";\n                document.head.appendChild(styleElement);\n                console.log(\"injected apexcharts styles\");\n            }\n       }\n   \n       //hacky thing because we're only getting json, there's some config stuff that needs to be turned into functions\n        const fixFormatter = function (obj) {\n            if (typeof obj !== 'object') {\n                return;\n            }\n            for (let k of Object.keys(obj)) {\n                if (!obj[k]) {\n                    continue;\n                }\n                if (typeof obj[k] === \"string\") {\n                    if (k === 'formatter') {\n                        try {\n                            obj[k] = new Function(`return ${obj[k]}`)();\n                        } catch {\n                            console.error(\"a formatter function failed to compile: \" + obj[k]);\n                            obj[k] = null;\n                        }\n                    }\n                } else if (typeof obj[k] === \"object\") {\n                    fixFormatter(obj[k]);\n                }\n            }\n        }\n        scope.eleId = 'chart' + Math.random();\n        scope.eleId = scope.eleId.replace(\".\",\"\");\n        \n        scope.eleContent = `<div class=\"chart chart-line\" id=${scope.eleId}></div>`;\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            let msg = scope.msg;\n            if (!msg) {\n                return;\n            }\n            if (msg.topic == \"noop\") {\n                return;\n            }\n            if (!msg.payload) {\n                return;\n            }\n            let makeChart = null;\n            makeChart = (opts) => {\n                var ctx = document.getElementById(scope.eleId);\n                \n                if (!ctx || typeof ApexCharts === 'undefined') {\n                    console.log(\"canvas or apex isn't loaded yet\");\n                    setTimeout(() => {makeChart(opts);}, 100);\n                    return;\n                }\n                ctx.parentElement.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.parentElement.style.overflow = 'visible';\n                ctx.parentElement.style.overflow = 'visible';\n\n                try {\n                    for (let s of document.querySelectorAll(\"style\")) { if (s.innerText.includes('.nr-dashboard-theme .nr-dashboard-template path')) { s.innerText = (s.innerText.replace(/\\.nr-dashboard-theme \\.nr-dashboard-template path\\s+\\{[^\\}]*\\}/, '')); }}\n                    scope.chart = new ApexCharts(ctx, opts);\n                    scope.chart.render();\n                } catch (e) {\n                    console.log(\"exception: \");\n                    console.log(e);\n                }\n            }\n            fixFormatter(scope.msg.payload);\n            if (!scope.chart) {\n                makeChart(scope.msg.payload);\n            } else {\n                scope.chart.updateOptions(scope.msg.payload, false, false);   \n                scope.chart.updateSeries(scope.msg.payload.series, false);\n            }\n        })\n\n    })(scope)\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1410,"y":620,"wires":[[]]},{"id":"b32fea39.b8a8f8","type":"function","z":"68dd499a.a366c8","name":"Build dosing query","func":"var startStamp = global.get(\"history_start_timestamp\") || (Date.now() - 86400000);\nstartStamp = new Date(startStamp);\nstartStamp.setHours(0,0,0,0);\nvar endStamp = global.get(\"history_end_timestamp\") || Date.now();\nendStamp = new Date(endStamp);\nendStamp.setHours(0,0,0,0);\nendStamp.setDate(endStamp.getDate() + 1);\nmsg.payload = {};\nmsg.topic = `select timestamp, port, ml from\n    dosing where timestamp >= ${startStamp.getTime()} and timestamp <= ${endStamp.getTime()} order by timestamp asc;`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":320,"wires":[["c0809287.cc6e7"]]},{"id":"4a4e189b.eb7018","type":"debug","z":"68dd499a.a366c8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1450,"y":700,"wires":[]},{"id":"c0809287.cc6e7","type":"sqlite","z":"68dd499a.a366c8","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":1230,"y":420,"wires":[["6c4adfa2.9a2a2"]]},{"id":"6c4adfa2.9a2a2","type":"function","z":"68dd499a.a366c8","name":"Parse dosing data","func":"if (!msg.payload[0]) {\n    return null;\n}\nvar portData = [[], [], [], [], [], []];\nvar portLabels = [['CaliMagic'], ['Micro'], ['Grow'], ['Bloom'], ['pH Up'], ['pH Down']]\nvar calimagic = {scale: 'ml', series: portLabels[0], data: [portData[0]], labels:portLabels[0], color: '#f5da4277', type:'annox'};\nvar micro = {scale: 'ml', series: portLabels[1], data: [portData[1]], labels: portLabels[1], color: '#781c0077', type:'annox'};\nvar grow = {scale: 'ml', series: portLabels[2], data: [portData[2]], labels: portLabels[2], color: '#a1f77277', type:'annox'};\nvar bloom = {scale: 'ml', series: portLabels[3], data: [portData[3]], labels: portLabels[3], color: '#f772c677', type:'annox'};\nvar phup = {scale: 'ml', series: portLabels[4], data: [portData[4]], labels:portLabels[4], color: '#94dbf777', type:'annox'};\nvar phdown = {scale: 'ml', series: portLabels[5], data: [portData[5]], labels:portLabels[5], color: '#f7d78677', type:'annox'};\nlet data = {};\nfor (let row of msg.payload) {\n    if (row.port >= 0 && row.port <= 5) {\n        portData[row.port].push({x: row.timestamp, y: row.ml});\n        portLabels[row.port] += \" \" + row.ml + \"ml\";\n    }\n}\n\nvar msgs = [\n    \n        [{payload: [calimagic]},\n        {payload: [micro]},\n        {payload: [grow]},\n        {payload: [bloom]},\n        {payload: [phup]},\n        {payload: [phdown]}]\n    \n];\n\n    \n\nreturn msgs;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":500,"wires":[["43fb15a6.3c224c"]]},{"id":"fc14c775.f1c158","type":"function","z":"2b4fc933.a97346","name":"","func":"const defaultChartOptions = {\n    colors: [],\n    markers: { strokeWidth: 0, size: 0, radius: 0, showNullDataPoints: false },\n    chart: {\n        animations: {enabled: false, dynamicAnimation: { enabled: false }},\n        redrawOnParentResize: true,\n        type: 'line',\n        zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n        },\n        toolbar: {\n             autoSelected: 'zoom'\n        },\n        height: '100%'\n    },\n    series: [],// {name: 'ph', data: [{x: new Date(), y: 1}, {x: new Date(new Date().getTime() + (1 * 24 * 60 * 60 * 1000)), y: 3 }, {x: new Date(new Date().getTime() + (2 * 24 * 60 * 60 * 1000)), y: 6}] }],\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            show: true,\n            datetimeUTC: false,\n            datetimeFormatter: {\n                year: 'yyyy',\n                month: 'MMM \\'yy',\n                day: 'dd MMM',\n                hour: 'h:mm tt'\n              }\n        },\n        tooltip: {\n            enabled: true,\n            formatter: `function (val, ts) {\n                var d = new Date(val);\n                return d.toLocaleString('default', { month: 'short', day: \"2-digit\", hour: 'numeric', hour12: true, minute: \"2-digit\"});\n            }`\n        }\n    },\n    stroke: {\n\n        width: 2,\n        lineCap: 'butt'\n    },\n    tooltip: {\n        shared: false,\n        y: {\n            formatter: `function (x) {\n                return Math.round(x*100)/100;\n            }`\n        },\n        x: {\n                formatter: `function (val, ts) {\n                var d = new Date(val);\n                return d.toLocaleString('default', { month: 'short', day: \"2-digit\", hour: 'numeric', hour12: true, minute: \"2-digit\"});\n            }`\n        }\n    }\n};\nconst getScope = () => {\n    return context.get(\"scope\") || { chartOptions: JSON.parse(JSON.stringify(defaultChartOptions)), dataUpdateQueue: []};;\n}\nlet scope = getScope();\nconst sendChartConfig = () => {\n    node.send({payload: scope.chartOptions});\n    setTimeout(() => {\n        scope.dataUpdateQueue = [];\n        scope.chartOptions = JSON.parse(JSON.stringify(defaultChartOptions));\n        node.send({payload: {}, topic: \"noop\"});\n    }, 100);\n}\nconst updateData = () => {\n    let any = false;\n    while (scope.dataUpdateQueue.length > 0) {\n        any = true;\n        m = scope.dataUpdateQueue[0];\n        scope.dataUpdateQueue.splice(0,1);\n        \n        let label = m.labels[0]\n        let d = m.data[0];\n        if (m.type == 'annox') {\n            if (!scope.chartOptions.annotations) {\n                scope.chartOptions.annotations = {\n                    xaxis: []\n                };\n            }\n            let ap = scope.chartOptions.annotations.xaxis;\n            for (let p of ap.filter(x=> x.label.text == label)) {\n                let idx = ap.indexOf(p);\n                ap.splice(idx, 1);\n            }\n            for (let dp of d) {\n                let pt = {\n                    x: dp.x,\n                    label: {\n                        text: label,\n                          borderColor: m.color,\n                          style: {\n                            color: \"#fff\",\n                            background: m.color\n                          },    \n                    },\n                    borderColor: m.color,\n                }\n                ap.push(pt);\n            }\n        } else {\n            \n        \n            let foundIdx = scope.chartOptions.series.findIndex(x => x.name == label);\n    \n            \n            if (foundIdx >=0) {\n                scope.chartOptions.series[foundIdx].data = d;\n            } else {\n                if (!scope.chartOptions.yaxis) {\n                    scope.chartOptions.yaxis = [];\n                } \n                else if (scope.chartOptions.yaxis.length == 1 && !scope.chartOptions.yaxis[0].seriesName) {\n                    scope.chartOptions.yaxis = [];\n                }\n                let foundAxis = (scope.chartOptions.yaxis || []).find(x=> x.scaleName == m.scale);\n                let scaleSeriesName = label;\n                let scaleSeriesOpposite = scope.chartOptions.yaxis.length %2 == 0;\n                let min = undefined;\n                let max = undefined;\n                for (let dp of d) {\n                    if (dp.y !== null) {\n                        if (min === undefined || dp.y < min) {\n                            min = dp.y;\n                        }\n                        if (max === undefined || dp.y > max) {\n                            max = dp.y\n                        }\n                    }\n                }\n                \n                let pad = Math.abs(min - max) & .15;\n                if (pad < .75) {\n                    pad = .75;\n                }\n                min -= pad;\n                max += pad;\n                min = Math.floor(min);\n                max = Math.ceil(max);\n                if (min == max) {\n                    max += 1;\n                }\n                if (foundAxis) {\n                    scaleSeriesName = foundAxis.seriesName;\n                    scaleSeriesOpposite = foundAxis.opposite;\n                    console.log(`found series name ${scaleSeriesName} for scale ${m.scale}`);\n                    let changed = false;\n                    if (foundAxis.min < min ) {\n                        min = foundAxis.min;\n                        changed = true;\n                    } else {\n                        min = foundAxis.min;\n                    }\n                    if (foundAxis.max > max) {\n                        max = foundAxis.max;\n                        changed = true;\n                    } else {\n                        max = foundAxis.max;\n                    }\n                    if (changed) {\n                        for (let axis of (scope.chartOptions.yaxis || []).filter(x=> x.scaleName == m.scale)) {\n                            axis.min = min;\n                            axis.max = max;\n                        }\n                    }\n                } else {\n                    console.log(`didn't find series name for scale ${m.scale}, using ${scaleSeriesName}`);\n                }\n                var ser = {name: label, data: d};\n                scope.chartOptions.series.push(ser);\n    \n                var yax = { \n                    seriesName: scaleSeriesName, \n                    scaleName: m.scale, \n                    opposite: scaleSeriesOpposite,\n                    labels: {\n                        show: false,\n                    },\n                    min: min,\n                    max: max\n                };\n    \n                scope.chartOptions.yaxis.push(yax);\n                scope.chartOptions.colors.push(m.color || Apex.colors[scope.chartOptions.colors.length]);\n            }\n        }\n    }\n    if (any) {\n        sendChartConfig();\n    }\n}\nconst doUpdateWait = () => {\n    if (scope.updateHandle) {\n        clearTimeout(scope.updateHandle);\n    }\n    scope.updateHandle = setTimeout(() => { try {\n        scope = getScope();\n        updateData();\n    } finally {\n        scope.updateHandle = null;\n        context.set(\"scope\", scope);\n    } }, 3000);\n\n}\ntry {\n    let chartOptions = scope.chartOptions;\n    let dataUpdateQueue = scope.dataUpdateQueue;\n    if (msg.topic == \"clear\") {\n        //todo: clear chart here\n        if (scope.updateHandle) {\n            clearTimeout(scope.updateHandle);\n            scope.updateHandle = null;\n        }\n        scope.dataUpdateQueue = [];\n        scope.chartOptions = JSON.parse(JSON.stringify(defaultChartOptions));\n        sendChartConfig();\n        return;\n    }\n    if (!msg.payload) {\n        throw \"payload null\";\n    }\n    if (!Array.isArray(msg.payload)) {\n        throw \"not array\";\n    }\n    dataUpdateQueue.push(msg.payload[0]);\n    doUpdateWait();\n} finally {         \n    context.set(\"scope\", scope);\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":100,"wires":[[]]},{"id":"43fb15a6.3c224c","type":"subflow:2b4fc933.a97346","z":"68dd499a.a366c8","name":"","x":780,"y":680,"wires":[["1a59a70.0383059"]]},{"id":"3ce02c53.419524","type":"function","z":"38def9ff.21aea6","name":"Build dosing query","func":"var startStamp = global.get(\"history_start_timestamp\") || (Date.now() - 86400000);\nstartStamp = new Date(startStamp);\nstartStamp.setHours(0,0,0,0);\nvar endStamp = global.get(\"history_end_timestamp\") || Date.now();\nendStamp = new Date(endStamp);\nendStamp.setHours(0,0,0,0);\nendStamp.setDate(endStamp.getDate() + 1);\nmsg.payload = {};\nmsg.topic = `select timestamp, port, ml from\n    dosing where timestamp >= ${startStamp.getTime()} and timestamp <= ${endStamp.getTime()} order by timestamp asc;`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1470,"y":360,"wires":[["7a17240e.1f8aac"]]},{"id":"7a17240e.1f8aac","type":"sqlite","z":"38def9ff.21aea6","mydb":"30dfc866.064c48","sqlquery":"msg.topic","sql":"","name":"","x":1610,"y":420,"wires":[["e6876b40.f9f988"]]},{"id":"e6876b40.f9f988","type":"function","z":"38def9ff.21aea6","name":"Parse dosing data","func":"if (!msg.payload[0]) {\n    return null;\n}\nvar portData = [[], [], [], [], [], []];\nvar portLabels = [['CaliMagic'], ['Micro'], ['Grow'], ['Bloom'], ['pH Up'], ['pH Down']]\nvar calimagic = {scale: 'ml', series: portLabels[0], data: [portData[0]], labels:portLabels[0], color: '#f5da4255', type:'annox'};\nvar micro = {scale: 'ml', series: portLabels[1], data: [portData[1]], labels: portLabels[1], color: '#781c0055', type:'annox'};\nvar grow = {scale: 'ml', series: portLabels[2], data: [portData[2]], labels: portLabels[2], color: '#a1f77255', type:'annox'};\nvar bloom = {scale: 'ml', series: portLabels[3], data: [portData[3]], labels: portLabels[3], color: '#f772c655', type:'annox'};\nvar phup = {scale: 'ml', series: portLabels[4], data: [portData[4]], labels:portLabels[4], color: '#94dbf755', type:'annox'};\nvar phdown = {scale: 'ml', series: portLabels[5], data: [portData[5]], labels:portLabels[5], color: '#f7d78655', type:'annox'};\nlet data = {};\nfor (let row of msg.payload) {\n    if (row.port >= 0 && row.port <= 5) {\n        portData[row.port].push({x: row.timestamp, y: row.ml});\n        portLabels[row.port] += \" \" + row.ml + \"ml\";\n    }\n}\n\nvar msgs = [\n    \n        [{payload: [calimagic]},\n        {payload: [micro]},\n        {payload: [grow]},\n        {payload: [bloom]},\n        {payload: [phup]},\n        {payload: [phdown]}]\n    \n];\n\n    \n\nreturn msgs;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":500,"wires":[["db01cb96.ce2198","1738b8a1.4336c7","6ee22302.8a431c","376999e6.46b316","3c20b2cc.1a290e","7e91e096.4df32"]]},{"id":"c199c539.1f1bd8","type":"function","z":"5189c7b3.782c68","name":"","func":"const defaultChartOptions = {\n    colors: [],\n    markers: { strokeWidth: 0, size: 0, radius: 0, showNullDataPoints: false },\n    chart: {\n        animations: {enabled: false, dynamicAnimation: { enabled: false }},\n        redrawOnParentResize: true,\n        type: 'line',\n        zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n        },\n        toolbar: {\n\n            show: true,\n            offsetX: 0,\n            offsetY: 0,\n            tools: {\n              download: false,\n              selection: false,\n              zoom: true,\n              zoomin: false,\n              zoomout: false,\n              pan: false,\n              reset: true\n            },\n            autoSelected: 'zoom'\n        },\n        height: '100%'\n    },    \n    title: {\n        text: env.get(\"Title\"),\n        align: 'center',\n        floating: true\n    },\n    series: [],// {name: 'ph', data: [{x: new Date(), y: 1}, {x: new Date(new Date().getTime() + (1 * 24 * 60 * 60 * 1000)), y: 3 }, {x: new Date(new Date().getTime() + (2 * 24 * 60 * 60 * 1000)), y: 6}] }],\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            show: true,\n            datetimeUTC: false,\n            datetimeFormatter: {\n                year: 'yyyy',\n                month: 'MMM \\'yy',\n                day: 'dd MMM',\n                hour: 'h:mm tt'\n              }\n        },\n        tooltip: {\n            enabled: true,\n            formatter: `function (val, ts) {\n                var d = new Date(val);\n                return d.toLocaleString('default', { month: 'short', day: \"2-digit\", hour: 'numeric', hour12: true, minute: \"2-digit\"});\n            }`\n        }\n    },\n    stroke: {\n\n        width: 2,\n        lineCap: 'butt'\n    },\n    tooltip: {\n        shared: false,\n        y: {\n            formatter: `function (x) {\n                return Math.round(x*100)/100;\n            }`\n        },\n        x: {\n                formatter: `function (val, ts) {\n                var d = new Date(val);\n                return d.toLocaleString('default', { month: 'short', day: \"2-digit\", hour: 'numeric', hour12: true, minute: \"2-digit\"});\n            }`\n        }\n    },\n    legend: { show: false }\n};\nconst getScope = () => {\n    return context.get(\"scope\") || { chartOptions: JSON.parse(JSON.stringify(defaultChartOptions)), dataUpdateQueue: []};;\n}\nlet scope = getScope();\nconst sendChartConfig = () => {\n    node.send({payload: scope.chartOptions});\n    setTimeout(() => {\n        scope.dataUpdateQueue = [];\n        scope.chartOptions = JSON.parse(JSON.stringify(defaultChartOptions));\n        node.send({payload: {}, topic: \"noop\"});\n    }, 100);\n}\nconst updateData = () => {\n    let any = false;\n    while (scope.dataUpdateQueue.length > 0) {\n        any = true;\n        m = scope.dataUpdateQueue[0];\n        scope.dataUpdateQueue.splice(0,1);\n        \n        let label = m.labels[0]\n        let d = m.data[0];\n        if (m.type == 'annox') {\n            if (!scope.chartOptions.annotations) {\n                scope.chartOptions.annotations = {\n                    xaxis: []\n                };\n            }\n            let ap = scope.chartOptions.annotations.xaxis;\n            for (let p of ap.filter(x=> x.label.text == label)) {\n                let idx = ap.indexOf(p);\n                ap.splice(idx, 1);\n            }\n            for (let dp of d) {\n                let pt = {\n                    text: null,\n                    x: dp.x,\n                    label: {\n                            strokeDashArray: 1,    \n                          borderColor: m.color,\n                          style: {\n                            color: m.color,\n                            background: m.color\n                          },    \n                    },\n                    borderWidth: 2,\n                    borderColor: m.color,\n                }\n                ap.push(pt);\n            }\n        } else {\n            \n        \n            let foundIdx = scope.chartOptions.series.findIndex(x => x.name == label);\n    \n            \n            if (foundIdx >=0) {\n                scope.chartOptions.series[foundIdx].data = d;\n            } else {\n                if (!scope.chartOptions.yaxis) {\n                    scope.chartOptions.yaxis = [];\n                } \n                else if (scope.chartOptions.yaxis.length == 1 && !scope.chartOptions.yaxis[0].seriesName) {\n                    scope.chartOptions.yaxis = [];\n                }\n                let foundAxis = (scope.chartOptions.yaxis || []).find(x=> x.scaleName == m.scale);\n                let scaleSeriesName = label;\n                let scaleSeriesOpposite = scope.chartOptions.yaxis.length %2 == 0;\n                let min = undefined;\n                let max = undefined;\n                for (let dp of d) {\n                    if (dp.y !== null) {\n                        if (min === undefined || dp.y < min) {\n                            min = dp.y;\n                        }\n                        if (max === undefined || dp.y > max) {\n                            max = dp.y\n                        }\n                    }\n                }\n                \n                let pad = Math.abs(min - max) & .15;\n                if (pad < .75) {\n                    pad = .75;\n                }\n                min -= pad;\n                max += pad;\n                min = Math.floor(min);\n                max = Math.ceil(max);\n                if (min == max) {\n                    max += 1;\n                }\n                if (foundAxis) {\n                    scaleSeriesName = foundAxis.seriesName;\n                    scaleSeriesOpposite = foundAxis.opposite;\n                    console.log(`found series name ${scaleSeriesName} for scale ${m.scale}`);\n                    let changed = false;\n                    if (foundAxis.min < min ) {\n                        min = foundAxis.min;\n                        changed = true;\n                    } else {\n                        min = foundAxis.min;\n                    }\n                    if (foundAxis.max > max) {\n                        max = foundAxis.max;\n                        changed = true;\n                    } else {\n                        max = foundAxis.max;\n                    }\n                    if (changed) {\n                        for (let axis of (scope.chartOptions.yaxis || []).filter(x=> x.scaleName == m.scale)) {\n                            axis.min = min;\n                            axis.max = max;\n                        }\n                    }\n                } else {\n                    console.log(`didn't find series name for scale ${m.scale}, using ${scaleSeriesName}`);\n                }\n                var ser = {name: label, data: d};\n\n                scope.chartOptions.series.push(ser);\n\n                var yax = { \n                    seriesName: scaleSeriesName, \n                    scaleName: m.scale, \n                    opposite: scaleSeriesOpposite,\n                    floating: !!foundAxis,\n                    labels: {\n                        maxWidth: foundAxis?0:25,\n                        show: !foundAxis,\n                        formatter: env.get(\"fixedpoint\")?`function(x) { return x.toFixed(0); }`:`function(x) { return Math.round(x * 100)/100; }`\n                    },\n                    min: min,\n                    max: max,\n                    forceNiceScale: true,\n                };\n    \n                scope.chartOptions.yaxis.push(yax);\n                scope.chartOptions.colors.push(m.color || Apex.colors[scope.chartOptions.colors.length]);\n            }\n        }\n    }\n    if (any) {\n        sendChartConfig();\n    }\n}\nconst doUpdateWait = () => {\n    if (scope.updateHandle) {\n        clearTimeout(scope.updateHandle);\n    }\n    scope.updateHandle = setTimeout(() => { try {\n        scope = getScope();\n        updateData();\n    } finally {\n        scope.updateHandle = null;\n        context.set(\"scope\", scope);\n    } }, 3000);\n\n}\ntry {\n    let chartOptions = scope.chartOptions;\n    let dataUpdateQueue = scope.dataUpdateQueue;\n    if (msg.topic == \"clear\") {\n        //todo: clear chart here\n        if (scope.updateHandle) {\n            clearTimeout(scope.updateHandle);\n            scope.updateHandle = null;\n        }\n        scope.dataUpdateQueue = [];\n        scope.chartOptions = JSON.parse(JSON.stringify(defaultChartOptions));\n        sendChartConfig();\n        return;\n    }\n    if (!msg.payload) {\n        throw \"payload null\";\n    }\n    if (!Array.isArray(msg.payload)) {\n        throw \"not array\";\n    }\n    dataUpdateQueue.push(msg.payload[0]);\n    doUpdateWait();\n} finally {         \n    context.set(\"scope\", scope);\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":100,"wires":[[]]},{"id":"db01cb96.ce2198","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"Water Temp °C","type":"str"},{"name":"fixedpoint","value":"true","type":"bool"}],"x":1190,"y":620,"wires":[["30999e74.020ca2","e4e6f03b.943e9"]]},{"id":"e4e6f03b.943e9","type":"debug","z":"38def9ff.21aea6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1780,"y":680,"wires":[]},{"id":"1738b8a1.4336c7","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"Water Level","type":"str"},{"name":"fixedpoint","value":"true","type":"bool"}],"x":1190,"y":660,"wires":[["e0667f67.8f75e"]]},{"id":"6ee22302.8a431c","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"pH","type":"str"}],"x":1190,"y":700,"wires":[["508b8ead.7c2ed"]]},{"id":"376999e6.46b316","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"TDS","type":"str"},{"name":"fixedpoint","value":"true","type":"bool"}],"x":1190,"y":740,"wires":[["3e24b1fe.1df88e"]]},{"id":"3c20b2cc.1a290e","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"Temp °C","type":"str"}],"x":1190,"y":780,"wires":[["9eebd533.45dfb8"]]},{"id":"7e91e096.4df32","type":"subflow:5189c7b3.782c68","z":"38def9ff.21aea6","name":"","env":[{"name":"Title","value":"Humidity","type":"str"},{"name":"fixedpoint","value":"true","type":"bool"}],"x":1190,"y":820,"wires":[["a834b17d.b20a4"]]},{"id":"1231ae06.526dc2","type":"ui_switch","z":"68dd499a.a366c8","name":"","label":"Dosing","tooltip":"","group":"ab3ec0cf.5f1fc","order":11,"width":4,"height":1,"passthru":false,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":130,"y":1180,"wires":[["c99bcef0.c15ca"]]},{"id":"c99bcef0.c15ca","type":"change","z":"68dd499a.a366c8","name":"","rules":[{"t":"set","p":"show_dosing","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":1180,"wires":[[]]},{"id":"e72c1c85.b11de","type":"switch","z":"68dd499a.a366c8","name":"Show dosing","property":"show_dosing","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1030,"y":340,"wires":[["b32fea39.b8a8f8"]]}]